/*
 * Copyright (c) 2019-2022 GeyserMC. http://geysermc.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @author GeyserMC
 * @link https://github.com/GeyserMC/Geyser
 */

package org.geysermc.geyser.item;

import org.geysermc.geyser.item.components.ToolTier;
import org.geysermc.geyser.item.type.*;
import org.geysermc.geyser.registry.Registries;

import static org.geysermc.geyser.item.type.Item.builder;

/**
 * A list, in order, of all Java items.
 */
public final class Items {
    public static final Item AIR = register(new Item("air", builder()));
    public static final Item STONE = register(new Item("stone", builder()));
    public static final Item GRANITE = register(new Item("granite", builder()));
    public static final Item POLISHED_GRANITE = register(new Item("polished_granite", builder()));
    public static final Item DIORITE = register(new Item("diorite", builder()));
    public static final Item POLISHED_DIORITE = register(new Item("polished_diorite", builder()));
    public static final Item ANDESITE = register(new Item("andesite", builder()));
    public static final Item POLISHED_ANDESITE = register(new Item("polished_andesite", builder()));
    public static final Item DEEPSLATE = register(new Item("deepslate", builder()));
    public static final Item COBBLED_DEEPSLATE = register(new Item("cobbled_deepslate", builder()));
    public static final Item POLISHED_DEEPSLATE = register(new Item("polished_deepslate", builder()));
    public static final Item CALCITE = register(new Item("calcite", builder()));
    public static final Item TUFF = register(new Item("tuff", builder()));
    public static final Item DRIPSTONE_BLOCK = register(new Item("dripstone_block", builder()));
    public static final Item GRASS_BLOCK = register(new Item("grass_block", builder()));
    public static final Item DIRT = register(new Item("dirt", builder()));
    public static final Item COARSE_DIRT = register(new Item("coarse_dirt", builder()));
    public static final Item PODZOL = register(new Item("podzol", builder()));
    public static final Item ROOTED_DIRT = register(new Item("rooted_dirt", builder()));
    public static final Item MUD = register(new Item("mud", builder()));
    public static final Item CRIMSON_NYLIUM = register(new Item("crimson_nylium", builder()));
    public static final Item WARPED_NYLIUM = register(new Item("warped_nylium", builder()));
    public static final Item COBBLESTONE = register(new Item("cobblestone", builder()));
    public static final Item OAK_PLANKS = register(new Item("oak_planks", builder()));
    public static final Item SPRUCE_PLANKS = register(new Item("spruce_planks", builder()));
    public static final Item BIRCH_PLANKS = register(new Item("birch_planks", builder()));
    public static final Item JUNGLE_PLANKS = register(new Item("jungle_planks", builder()));
    public static final Item ACACIA_PLANKS = register(new Item("acacia_planks", builder()));
    public static final Item DARK_OAK_PLANKS = register(new Item("dark_oak_planks", builder()));
    public static final Item MANGROVE_PLANKS = register(new Item("mangrove_planks", builder()));
    public static final Item BAMBOO_PLANKS = register(new Item("bamboo_planks", builder()));
    public static final Item CRIMSON_PLANKS = register(new Item("crimson_planks", builder()));
    public static final Item WARPED_PLANKS = register(new Item("warped_planks", builder()));
    public static final Item BAMBOO_MOSAIC = register(new Item("bamboo_mosaic", builder()));
    public static final Item OAK_SAPLING = register(new Item("oak_sapling", builder()));
    public static final Item SPRUCE_SAPLING = register(new Item("spruce_sapling", builder()));
    public static final Item BIRCH_SAPLING = register(new Item("birch_sapling", builder()));
    public static final Item JUNGLE_SAPLING = register(new Item("jungle_sapling", builder()));
    public static final Item ACACIA_SAPLING = register(new Item("acacia_sapling", builder()));
    public static final Item DARK_OAK_SAPLING = register(new Item("dark_oak_sapling", builder()));
    public static final Item MANGROVE_PROPAGULE = register(new Item("mangrove_propagule", builder()));
    public static final Item BEDROCK = register(new Item("bedrock", builder()));
    public static final Item SAND = register(new Item("sand", builder()));
    public static final Item RED_SAND = register(new Item("red_sand", builder()));
    public static final Item GRAVEL = register(new Item("gravel", builder()));
    public static final Item COAL_ORE = register(new Item("coal_ore", builder()));
    public static final Item DEEPSLATE_COAL_ORE = register(new Item("deepslate_coal_ore", builder()));
    public static final Item IRON_ORE = register(new Item("iron_ore", builder()));
    public static final Item DEEPSLATE_IRON_ORE = register(new Item("deepslate_iron_ore", builder()));
    public static final Item COPPER_ORE = register(new Item("copper_ore", builder()));
    public static final Item DEEPSLATE_COPPER_ORE = register(new Item("deepslate_copper_ore", builder()));
    public static final Item GOLD_ORE = register(new Item("gold_ore", builder()));
    public static final Item DEEPSLATE_GOLD_ORE = register(new Item("deepslate_gold_ore", builder()));
    public static final Item REDSTONE_ORE = register(new Item("redstone_ore", builder()));
    public static final Item DEEPSLATE_REDSTONE_ORE = register(new Item("deepslate_redstone_ore", builder()));
    public static final Item EMERALD_ORE = register(new Item("emerald_ore", builder()));
    public static final Item DEEPSLATE_EMERALD_ORE = register(new Item("deepslate_emerald_ore", builder()));
    public static final Item LAPIS_ORE = register(new Item("lapis_ore", builder()));
    public static final Item DEEPSLATE_LAPIS_ORE = register(new Item("deepslate_lapis_ore", builder()));
    public static final Item DIAMOND_ORE = register(new Item("diamond_ore", builder()));
    public static final Item DEEPSLATE_DIAMOND_ORE = register(new Item("deepslate_diamond_ore", builder()));
    public static final Item NETHER_GOLD_ORE = register(new Item("nether_gold_ore", builder()));
    public static final Item NETHER_QUARTZ_ORE = register(new Item("nether_quartz_ore", builder()));
    public static final Item ANCIENT_DEBRIS = register(new Item("ancient_debris", builder()));
    public static final Item COAL_BLOCK = register(new Item("coal_block", builder()));
    public static final Item RAW_IRON_BLOCK = register(new Item("raw_iron_block", builder()));
    public static final Item RAW_COPPER_BLOCK = register(new Item("raw_copper_block", builder()));
    public static final Item RAW_GOLD_BLOCK = register(new Item("raw_gold_block", builder()));
    public static final Item AMETHYST_BLOCK = register(new Item("amethyst_block", builder()));
    public static final Item BUDDING_AMETHYST = register(new Item("budding_amethyst", builder()));
    public static final Item IRON_BLOCK = register(new Item("iron_block", builder()));
    public static final Item COPPER_BLOCK = register(new Item("copper_block", builder()));
    public static final Item GOLD_BLOCK = register(new Item("gold_block", builder()));
    public static final Item DIAMOND_BLOCK = register(new Item("diamond_block", builder()));
    public static final Item NETHERITE_BLOCK = register(new Item("netherite_block", builder()));
    public static final Item EXPOSED_COPPER = register(new Item("exposed_copper", builder()));
    public static final Item WEATHERED_COPPER = register(new Item("weathered_copper", builder()));
    public static final Item OXIDIZED_COPPER = register(new Item("oxidized_copper", builder()));
    public static final Item CUT_COPPER = register(new Item("cut_copper", builder()));
    public static final Item EXPOSED_CUT_COPPER = register(new Item("exposed_cut_copper", builder()));
    public static final Item WEATHERED_CUT_COPPER = register(new Item("weathered_cut_copper", builder()));
    public static final Item OXIDIZED_CUT_COPPER = register(new Item("oxidized_cut_copper", builder()));
    public static final Item CUT_COPPER_STAIRS = register(new Item("cut_copper_stairs", builder()));
    public static final Item EXPOSED_CUT_COPPER_STAIRS = register(new Item("exposed_cut_copper_stairs", builder()));
    public static final Item WEATHERED_CUT_COPPER_STAIRS = register(new Item("weathered_cut_copper_stairs", builder()));
    public static final Item OXIDIZED_CUT_COPPER_STAIRS = register(new Item("oxidized_cut_copper_stairs", builder()));
    public static final Item CUT_COPPER_SLAB = register(new Item("cut_copper_slab", builder()));
    public static final Item EXPOSED_CUT_COPPER_SLAB = register(new Item("exposed_cut_copper_slab", builder()));
    public static final Item WEATHERED_CUT_COPPER_SLAB = register(new Item("weathered_cut_copper_slab", builder()));
    public static final Item OXIDIZED_CUT_COPPER_SLAB = register(new Item("oxidized_cut_copper_slab", builder()));
    public static final Item WAXED_COPPER_BLOCK = register(new Item("waxed_copper_block", builder()));
    public static final Item WAXED_EXPOSED_COPPER = register(new Item("waxed_exposed_copper", builder()));
    public static final Item WAXED_WEATHERED_COPPER = register(new Item("waxed_weathered_copper", builder()));
    public static final Item WAXED_OXIDIZED_COPPER = register(new Item("waxed_oxidized_copper", builder()));
    public static final Item WAXED_CUT_COPPER = register(new Item("waxed_cut_copper", builder()));
    public static final Item WAXED_EXPOSED_CUT_COPPER = register(new Item("waxed_exposed_cut_copper", builder()));
    public static final Item WAXED_WEATHERED_CUT_COPPER = register(new Item("waxed_weathered_cut_copper", builder()));
    public static final Item WAXED_OXIDIZED_CUT_COPPER = register(new Item("waxed_oxidized_cut_copper", builder()));
    public static final Item WAXED_CUT_COPPER_STAIRS = register(new Item("waxed_cut_copper_stairs", builder()));
    public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS = register(new Item("waxed_exposed_cut_copper_stairs", builder()));
    public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS = register(new Item("waxed_weathered_cut_copper_stairs", builder()));
    public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS = register(new Item("waxed_oxidized_cut_copper_stairs", builder()));
    public static final Item WAXED_CUT_COPPER_SLAB = register(new Item("waxed_cut_copper_slab", builder()));
    public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB = register(new Item("waxed_exposed_cut_copper_slab", builder()));
    public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB = register(new Item("waxed_weathered_cut_copper_slab", builder()));
    public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB = register(new Item("waxed_oxidized_cut_copper_slab", builder()));
    public static final Item OAK_LOG = register(new Item("oak_log", builder()));
    public static final Item SPRUCE_LOG = register(new Item("spruce_log", builder()));
    public static final Item BIRCH_LOG = register(new Item("birch_log", builder()));
    public static final Item JUNGLE_LOG = register(new Item("jungle_log", builder()));
    public static final Item ACACIA_LOG = register(new Item("acacia_log", builder()));
    public static final Item DARK_OAK_LOG = register(new Item("dark_oak_log", builder()));
    public static final Item MANGROVE_LOG = register(new Item("mangrove_log", builder()));
    public static final Item MANGROVE_ROOTS = register(new Item("mangrove_roots", builder()));
    public static final Item MUDDY_MANGROVE_ROOTS = register(new Item("muddy_mangrove_roots", builder()));
    public static final Item CRIMSON_STEM = register(new Item("crimson_stem", builder()));
    public static final Item WARPED_STEM = register(new Item("warped_stem", builder()));
    public static final Item BAMBOO_BLOCK = register(new Item("bamboo_block", builder()));
    public static final Item STRIPPED_OAK_LOG = register(new Item("stripped_oak_log", builder()));
    public static final Item STRIPPED_SPRUCE_LOG = register(new Item("stripped_spruce_log", builder()));
    public static final Item STRIPPED_BIRCH_LOG = register(new Item("stripped_birch_log", builder()));
    public static final Item STRIPPED_JUNGLE_LOG = register(new Item("stripped_jungle_log", builder()));
    public static final Item STRIPPED_ACACIA_LOG = register(new Item("stripped_acacia_log", builder()));
    public static final Item STRIPPED_DARK_OAK_LOG = register(new Item("stripped_dark_oak_log", builder()));
    public static final Item STRIPPED_MANGROVE_LOG = register(new Item("stripped_mangrove_log", builder()));
    public static final Item STRIPPED_CRIMSON_STEM = register(new Item("stripped_crimson_stem", builder()));
    public static final Item STRIPPED_WARPED_STEM = register(new Item("stripped_warped_stem", builder()));
    public static final Item STRIPPED_OAK_WOOD = register(new Item("stripped_oak_wood", builder()));
    public static final Item STRIPPED_SPRUCE_WOOD = register(new Item("stripped_spruce_wood", builder()));
    public static final Item STRIPPED_BIRCH_WOOD = register(new Item("stripped_birch_wood", builder()));
    public static final Item STRIPPED_JUNGLE_WOOD = register(new Item("stripped_jungle_wood", builder()));
    public static final Item STRIPPED_ACACIA_WOOD = register(new Item("stripped_acacia_wood", builder()));
    public static final Item STRIPPED_DARK_OAK_WOOD = register(new Item("stripped_dark_oak_wood", builder()));
    public static final Item STRIPPED_MANGROVE_WOOD = register(new Item("stripped_mangrove_wood", builder()));
    public static final Item STRIPPED_CRIMSON_HYPHAE = register(new Item("stripped_crimson_hyphae", builder()));
    public static final Item STRIPPED_WARPED_HYPHAE = register(new Item("stripped_warped_hyphae", builder()));
    public static final Item STRIPPED_BAMBOO_BLOCK = register(new Item("stripped_bamboo_block", builder()));
    public static final Item OAK_WOOD = register(new Item("oak_wood", builder()));
    public static final Item SPRUCE_WOOD = register(new Item("spruce_wood", builder()));
    public static final Item BIRCH_WOOD = register(new Item("birch_wood", builder()));
    public static final Item JUNGLE_WOOD = register(new Item("jungle_wood", builder()));
    public static final Item ACACIA_WOOD = register(new Item("acacia_wood", builder()));
    public static final Item DARK_OAK_WOOD = register(new Item("dark_oak_wood", builder()));
    public static final Item MANGROVE_WOOD = register(new Item("mangrove_wood", builder()));
    public static final Item CRIMSON_HYPHAE = register(new Item("crimson_hyphae", builder()));
    public static final Item WARPED_HYPHAE = register(new Item("warped_hyphae", builder()));
    public static final Item OAK_LEAVES = register(new Item("oak_leaves", builder()));
    public static final Item SPRUCE_LEAVES = register(new Item("spruce_leaves", builder()));
    public static final Item BIRCH_LEAVES = register(new Item("birch_leaves", builder()));
    public static final Item JUNGLE_LEAVES = register(new Item("jungle_leaves", builder()));
    public static final Item ACACIA_LEAVES = register(new Item("acacia_leaves", builder()));
    public static final Item DARK_OAK_LEAVES = register(new Item("dark_oak_leaves", builder()));
    public static final Item MANGROVE_LEAVES = register(new Item("mangrove_leaves", builder()));
    public static final Item AZALEA_LEAVES = register(new Item("azalea_leaves", builder()));
    public static final Item FLOWERING_AZALEA_LEAVES = register(new Item("flowering_azalea_leaves", builder()));
    public static final Item SPONGE = register(new Item("sponge", builder()));
    public static final Item WET_SPONGE = register(new Item("wet_sponge", builder()));
    public static final Item GLASS = register(new Item("glass", builder()));
    public static final Item TINTED_GLASS = register(new Item("tinted_glass", builder()));
    public static final Item LAPIS_BLOCK = register(new Item("lapis_block", builder()));
    public static final Item SANDSTONE = register(new Item("sandstone", builder()));
    public static final Item CHISELED_SANDSTONE = register(new Item("chiseled_sandstone", builder()));
    public static final Item CUT_SANDSTONE = register(new Item("cut_sandstone", builder()));
    public static final Item COBWEB = register(new Item("cobweb", builder()));
    public static final Item GRASS = register(new Item("grass", builder()));
    public static final Item FERN = register(new Item("fern", builder()));
    public static final Item AZALEA = register(new Item("azalea", builder()));
    public static final Item FLOWERING_AZALEA = register(new Item("flowering_azalea", builder()));
    public static final Item DEAD_BUSH = register(new Item("dead_bush", builder()));
    public static final Item SEAGRASS = register(new Item("seagrass", builder()));
    public static final Item SEA_PICKLE = register(new Item("sea_pickle", builder()));
    public static final Item WHITE_WOOL = register(new Item("white_wool", builder()));
    public static final Item ORANGE_WOOL = register(new Item("orange_wool", builder()));
    public static final Item MAGENTA_WOOL = register(new Item("magenta_wool", builder()));
    public static final Item LIGHT_BLUE_WOOL = register(new Item("light_blue_wool", builder()));
    public static final Item YELLOW_WOOL = register(new Item("yellow_wool", builder()));
    public static final Item LIME_WOOL = register(new Item("lime_wool", builder()));
    public static final Item PINK_WOOL = register(new Item("pink_wool", builder()));
    public static final Item GRAY_WOOL = register(new Item("gray_wool", builder()));
    public static final Item LIGHT_GRAY_WOOL = register(new Item("light_gray_wool", builder()));
    public static final Item CYAN_WOOL = register(new Item("cyan_wool", builder()));
    public static final Item PURPLE_WOOL = register(new Item("purple_wool", builder()));
    public static final Item BLUE_WOOL = register(new Item("blue_wool", builder()));
    public static final Item BROWN_WOOL = register(new Item("brown_wool", builder()));
    public static final Item GREEN_WOOL = register(new Item("green_wool", builder()));
    public static final Item RED_WOOL = register(new Item("red_wool", builder()));
    public static final Item BLACK_WOOL = register(new Item("black_wool", builder()));
    public static final Item DANDELION = register(new Item("dandelion", builder()));
    public static final Item POPPY = register(new Item("poppy", builder()));
    public static final Item BLUE_ORCHID = register(new Item("blue_orchid", builder()));
    public static final Item ALLIUM = register(new Item("allium", builder()));
    public static final Item AZURE_BLUET = register(new Item("azure_bluet", builder()));
    public static final Item RED_TULIP = register(new Item("red_tulip", builder()));
    public static final Item ORANGE_TULIP = register(new Item("orange_tulip", builder()));
    public static final Item WHITE_TULIP = register(new Item("white_tulip", builder()));
    public static final Item PINK_TULIP = register(new Item("pink_tulip", builder()));
    public static final Item OXEYE_DAISY = register(new Item("oxeye_daisy", builder()));
    public static final Item CORNFLOWER = register(new Item("cornflower", builder()));
    public static final Item LILY_OF_THE_VALLEY = register(new Item("lily_of_the_valley", builder()));
    public static final Item WITHER_ROSE = register(new Item("wither_rose", builder()));
    public static final Item SPORE_BLOSSOM = register(new Item("spore_blossom", builder()));
    public static final Item BROWN_MUSHROOM = register(new Item("brown_mushroom", builder()));
    public static final Item RED_MUSHROOM = register(new Item("red_mushroom", builder()));
    public static final Item CRIMSON_FUNGUS = register(new Item("crimson_fungus", builder()));
    public static final Item WARPED_FUNGUS = register(new Item("warped_fungus", builder()));
    public static final Item CRIMSON_ROOTS = register(new Item("crimson_roots", builder()));
    public static final Item WARPED_ROOTS = register(new Item("warped_roots", builder()));
    public static final Item NETHER_SPROUTS = register(new Item("nether_sprouts", builder()));
    public static final Item WEEPING_VINES = register(new Item("weeping_vines", builder()));
    public static final Item TWISTING_VINES = register(new Item("twisting_vines", builder()));
    public static final Item SUGAR_CANE = register(new Item("sugar_cane", builder()));
    public static final Item KELP = register(new Item("kelp", builder()));
    public static final Item MOSS_CARPET = register(new Item("moss_carpet", builder()));
    public static final Item MOSS_BLOCK = register(new Item("moss_block", builder()));
    public static final Item HANGING_ROOTS = register(new Item("hanging_roots", builder()));
    public static final Item BIG_DRIPLEAF = register(new Item("big_dripleaf", builder()));
    public static final Item SMALL_DRIPLEAF = register(new Item("small_dripleaf", builder()));
    public static final Item BAMBOO = register(new Item("bamboo", builder()));
    public static final Item OAK_SLAB = register(new Item("oak_slab", builder()));
    public static final Item SPRUCE_SLAB = register(new Item("spruce_slab", builder()));
    public static final Item BIRCH_SLAB = register(new Item("birch_slab", builder()));
    public static final Item JUNGLE_SLAB = register(new Item("jungle_slab", builder()));
    public static final Item ACACIA_SLAB = register(new Item("acacia_slab", builder()));
    public static final Item DARK_OAK_SLAB = register(new Item("dark_oak_slab", builder()));
    public static final Item MANGROVE_SLAB = register(new Item("mangrove_slab", builder()));
    public static final Item BAMBOO_SLAB = register(new Item("bamboo_slab", builder()));
    public static final Item BAMBOO_MOSAIC_SLAB = register(new Item("bamboo_mosaic_slab", builder()));
    public static final Item CRIMSON_SLAB = register(new Item("crimson_slab", builder()));
    public static final Item WARPED_SLAB = register(new Item("warped_slab", builder()));
    public static final Item STONE_SLAB = register(new Item("stone_slab", builder()));
    public static final Item SMOOTH_STONE_SLAB = register(new Item("smooth_stone_slab", builder()));
    public static final Item SANDSTONE_SLAB = register(new Item("sandstone_slab", builder()));
    public static final Item CUT_SANDSTONE_SLAB = register(new Item("cut_sandstone_slab", builder()));
    public static final Item PETRIFIED_OAK_SLAB = register(new Item("petrified_oak_slab", builder()));
    public static final Item COBBLESTONE_SLAB = register(new Item("cobblestone_slab", builder()));
    public static final Item BRICK_SLAB = register(new Item("brick_slab", builder()));
    public static final Item STONE_BRICK_SLAB = register(new Item("stone_brick_slab", builder()));
    public static final Item MUD_BRICK_SLAB = register(new Item("mud_brick_slab", builder()));
    public static final Item NETHER_BRICK_SLAB = register(new Item("nether_brick_slab", builder()));
    public static final Item QUARTZ_SLAB = register(new Item("quartz_slab", builder()));
    public static final Item RED_SANDSTONE_SLAB = register(new Item("red_sandstone_slab", builder()));
    public static final Item CUT_RED_SANDSTONE_SLAB = register(new Item("cut_red_sandstone_slab", builder()));
    public static final Item PURPUR_SLAB = register(new Item("purpur_slab", builder()));
    public static final Item PRISMARINE_SLAB = register(new Item("prismarine_slab", builder()));
    public static final Item PRISMARINE_BRICK_SLAB = register(new Item("prismarine_brick_slab", builder()));
    public static final Item DARK_PRISMARINE_SLAB = register(new Item("dark_prismarine_slab", builder()));
    public static final Item SMOOTH_QUARTZ = register(new Item("smooth_quartz", builder()));
    public static final Item SMOOTH_RED_SANDSTONE = register(new Item("smooth_red_sandstone", builder()));
    public static final Item SMOOTH_SANDSTONE = register(new Item("smooth_sandstone", builder()));
    public static final Item SMOOTH_STONE = register(new Item("smooth_stone", builder()));
    public static final Item BRICKS = register(new Item("bricks", builder()));
    public static final Item BOOKSHELF = register(new Item("bookshelf", builder()));
    public static final Item CHISELED_BOOKSHELF = register(new Item("chiseled_bookshelf", builder()));
    public static final Item MOSSY_COBBLESTONE = register(new Item("mossy_cobblestone", builder()));
    public static final Item OBSIDIAN = register(new Item("obsidian", builder()));
    public static final Item TORCH = register(new Item("torch", builder()));
    public static final Item END_ROD = register(new Item("end_rod", builder()));
    public static final Item CHORUS_PLANT = register(new Item("chorus_plant", builder()));
    public static final Item CHORUS_FLOWER = register(new Item("chorus_flower", builder()));
    public static final Item PURPUR_BLOCK = register(new Item("purpur_block", builder()));
    public static final Item PURPUR_PILLAR = register(new Item("purpur_pillar", builder()));
    public static final Item PURPUR_STAIRS = register(new Item("purpur_stairs", builder()));
    public static final Item SPAWNER = register(new Item("spawner", builder()));
    public static final Item CHEST = register(new Item("chest", builder()));
    public static final Item CRAFTING_TABLE = register(new Item("crafting_table", builder()));
    public static final Item FARMLAND = register(new Item("farmland", builder()));
    public static final Item FURNACE = register(new Item("furnace", builder()));
    public static final Item LADDER = register(new Item("ladder", builder()));
    public static final Item COBBLESTONE_STAIRS = register(new Item("cobblestone_stairs", builder()));
    public static final Item SNOW = register(new Item("snow", builder()));
    public static final Item ICE = register(new Item("ice", builder()));
    public static final Item SNOW_BLOCK = register(new Item("snow_block", builder()));
    public static final Item CACTUS = register(new Item("cactus", builder()));
    public static final Item CLAY = register(new Item("clay", builder()));
    public static final Item JUKEBOX = register(new Item("jukebox", builder()));
    public static final Item OAK_FENCE = register(new Item("oak_fence", builder()));
    public static final Item SPRUCE_FENCE = register(new Item("spruce_fence", builder()));
    public static final Item BIRCH_FENCE = register(new Item("birch_fence", builder()));
    public static final Item JUNGLE_FENCE = register(new Item("jungle_fence", builder()));
    public static final Item ACACIA_FENCE = register(new Item("acacia_fence", builder()));
    public static final Item DARK_OAK_FENCE = register(new Item("dark_oak_fence", builder()));
    public static final Item MANGROVE_FENCE = register(new Item("mangrove_fence", builder()));
    public static final Item BAMBOO_FENCE = register(new Item("bamboo_fence", builder()));
    public static final Item CRIMSON_FENCE = register(new Item("crimson_fence", builder()));
    public static final Item WARPED_FENCE = register(new Item("warped_fence", builder()));
    public static final Item PUMPKIN = register(new Item("pumpkin", builder()));
    public static final Item CARVED_PUMPKIN = register(new Item("carved_pumpkin", builder()));
    public static final Item JACK_O_LANTERN = register(new Item("jack_o_lantern", builder()));
    public static final Item NETHERRACK = register(new Item("netherrack", builder()));
    public static final Item SOUL_SAND = register(new Item("soul_sand", builder()));
    public static final Item SOUL_SOIL = register(new Item("soul_soil", builder()));
    public static final Item BASALT = register(new Item("basalt", builder()));
    public static final Item POLISHED_BASALT = register(new Item("polished_basalt", builder()));
    public static final Item SMOOTH_BASALT = register(new Item("smooth_basalt", builder()));
    public static final Item SOUL_TORCH = register(new Item("soul_torch", builder()));
    public static final Item GLOWSTONE = register(new Item("glowstone", builder()));
    public static final Item INFESTED_STONE = register(new Item("infested_stone", builder()));
    public static final Item INFESTED_COBBLESTONE = register(new Item("infested_cobblestone", builder()));
    public static final Item INFESTED_STONE_BRICKS = register(new Item("infested_stone_bricks", builder()));
    public static final Item INFESTED_MOSSY_STONE_BRICKS = register(new Item("infested_mossy_stone_bricks", builder()));
    public static final Item INFESTED_CRACKED_STONE_BRICKS = register(new Item("infested_cracked_stone_bricks", builder()));
    public static final Item INFESTED_CHISELED_STONE_BRICKS = register(new Item("infested_chiseled_stone_bricks", builder()));
    public static final Item INFESTED_DEEPSLATE = register(new Item("infested_deepslate", builder()));
    public static final Item STONE_BRICKS = register(new Item("stone_bricks", builder()));
    public static final Item MOSSY_STONE_BRICKS = register(new Item("mossy_stone_bricks", builder()));
    public static final Item CRACKED_STONE_BRICKS = register(new Item("cracked_stone_bricks", builder()));
    public static final Item CHISELED_STONE_BRICKS = register(new Item("chiseled_stone_bricks", builder()));
    public static final Item PACKED_MUD = register(new Item("packed_mud", builder()));
    public static final Item MUD_BRICKS = register(new Item("mud_bricks", builder()));
    public static final Item DEEPSLATE_BRICKS = register(new Item("deepslate_bricks", builder()));
    public static final Item CRACKED_DEEPSLATE_BRICKS = register(new Item("cracked_deepslate_bricks", builder()));
    public static final Item DEEPSLATE_TILES = register(new Item("deepslate_tiles", builder()));
    public static final Item CRACKED_DEEPSLATE_TILES = register(new Item("cracked_deepslate_tiles", builder()));
    public static final Item CHISELED_DEEPSLATE = register(new Item("chiseled_deepslate", builder()));
    public static final Item REINFORCED_DEEPSLATE = register(new Item("reinforced_deepslate", builder()));
    public static final Item BROWN_MUSHROOM_BLOCK = register(new Item("brown_mushroom_block", builder()));
    public static final Item RED_MUSHROOM_BLOCK = register(new Item("red_mushroom_block", builder()));
    public static final Item MUSHROOM_STEM = register(new Item("mushroom_stem", builder()));
    public static final Item IRON_BARS = register(new Item("iron_bars", builder()));
    public static final Item CHAIN = register(new Item("chain", builder()));
    public static final Item GLASS_PANE = register(new Item("glass_pane", builder()));
    public static final Item MELON = register(new Item("melon", builder()));
    public static final Item VINE = register(new Item("vine", builder()));
    public static final Item GLOW_LICHEN = register(new Item("glow_lichen", builder()));
    public static final Item BRICK_STAIRS = register(new Item("brick_stairs", builder()));
    public static final Item STONE_BRICK_STAIRS = register(new Item("stone_brick_stairs", builder()));
    public static final Item MUD_BRICK_STAIRS = register(new Item("mud_brick_stairs", builder()));
    public static final Item MYCELIUM = register(new Item("mycelium", builder()));
    public static final Item LILY_PAD = register(new Item("lily_pad", builder()));
    public static final Item NETHER_BRICKS = register(new Item("nether_bricks", builder()));
    public static final Item CRACKED_NETHER_BRICKS = register(new Item("cracked_nether_bricks", builder()));
    public static final Item CHISELED_NETHER_BRICKS = register(new Item("chiseled_nether_bricks", builder()));
    public static final Item NETHER_BRICK_FENCE = register(new Item("nether_brick_fence", builder()));
    public static final Item NETHER_BRICK_STAIRS = register(new Item("nether_brick_stairs", builder()));
    public static final Item SCULK = register(new Item("sculk", builder()));
    public static final Item SCULK_VEIN = register(new Item("sculk_vein", builder()));
    public static final Item SCULK_CATALYST = register(new Item("sculk_catalyst", builder()));
    public static final Item SCULK_SHRIEKER = register(new Item("sculk_shrieker", builder()));
    public static final Item ENCHANTING_TABLE = register(new Item("enchanting_table", builder()));
    public static final Item END_PORTAL_FRAME = register(new Item("end_portal_frame", builder()));
    public static final Item END_STONE = register(new Item("end_stone", builder()));
    public static final Item END_STONE_BRICKS = register(new Item("end_stone_bricks", builder()));
    public static final Item DRAGON_EGG = register(new Item("dragon_egg", builder()));
    public static final Item SANDSTONE_STAIRS = register(new Item("sandstone_stairs", builder()));
    public static final Item ENDER_CHEST = register(new Item("ender_chest", builder()));
    public static final Item EMERALD_BLOCK = register(new Item("emerald_block", builder()));
    public static final Item OAK_STAIRS = register(new Item("oak_stairs", builder()));
    public static final Item SPRUCE_STAIRS = register(new Item("spruce_stairs", builder()));
    public static final Item BIRCH_STAIRS = register(new Item("birch_stairs", builder()));
    public static final Item JUNGLE_STAIRS = register(new Item("jungle_stairs", builder()));
    public static final Item ACACIA_STAIRS = register(new Item("acacia_stairs", builder()));
    public static final Item DARK_OAK_STAIRS = register(new Item("dark_oak_stairs", builder()));
    public static final Item MANGROVE_STAIRS = register(new Item("mangrove_stairs", builder()));
    public static final Item BAMBOO_STAIRS = register(new Item("bamboo_stairs", builder()));
    public static final Item BAMBOO_MOSAIC_STAIRS = register(new Item("bamboo_mosaic_stairs", builder()));
    public static final Item CRIMSON_STAIRS = register(new Item("crimson_stairs", builder()));
    public static final Item WARPED_STAIRS = register(new Item("warped_stairs", builder()));
    public static final Item COMMAND_BLOCK = register(new Item("command_block", builder()));
    public static final Item BEACON = register(new Item("beacon", builder()));
    public static final Item COBBLESTONE_WALL = register(new Item("cobblestone_wall", builder()));
    public static final Item MOSSY_COBBLESTONE_WALL = register(new Item("mossy_cobblestone_wall", builder()));
    public static final Item BRICK_WALL = register(new Item("brick_wall", builder()));
    public static final Item PRISMARINE_WALL = register(new Item("prismarine_wall", builder()));
    public static final Item RED_SANDSTONE_WALL = register(new Item("red_sandstone_wall", builder()));
    public static final Item MOSSY_STONE_BRICK_WALL = register(new Item("mossy_stone_brick_wall", builder()));
    public static final Item GRANITE_WALL = register(new Item("granite_wall", builder()));
    public static final Item STONE_BRICK_WALL = register(new Item("stone_brick_wall", builder()));
    public static final Item MUD_BRICK_WALL = register(new Item("mud_brick_wall", builder()));
    public static final Item NETHER_BRICK_WALL = register(new Item("nether_brick_wall", builder()));
    public static final Item ANDESITE_WALL = register(new Item("andesite_wall", builder()));
    public static final Item RED_NETHER_BRICK_WALL = register(new Item("red_nether_brick_wall", builder()));
    public static final Item SANDSTONE_WALL = register(new Item("sandstone_wall", builder()));
    public static final Item END_STONE_BRICK_WALL = register(new Item("end_stone_brick_wall", builder()));
    public static final Item DIORITE_WALL = register(new Item("diorite_wall", builder()));
    public static final Item BLACKSTONE_WALL = register(new Item("blackstone_wall", builder()));
    public static final Item POLISHED_BLACKSTONE_WALL = register(new Item("polished_blackstone_wall", builder()));
    public static final Item POLISHED_BLACKSTONE_BRICK_WALL = register(new Item("polished_blackstone_brick_wall", builder()));
    public static final Item COBBLED_DEEPSLATE_WALL = register(new Item("cobbled_deepslate_wall", builder()));
    public static final Item POLISHED_DEEPSLATE_WALL = register(new Item("polished_deepslate_wall", builder()));
    public static final Item DEEPSLATE_BRICK_WALL = register(new Item("deepslate_brick_wall", builder()));
    public static final Item DEEPSLATE_TILE_WALL = register(new Item("deepslate_tile_wall", builder()));
    public static final Item ANVIL = register(new Item("anvil", builder()));
    public static final Item CHIPPED_ANVIL = register(new Item("chipped_anvil", builder()));
    public static final Item DAMAGED_ANVIL = register(new Item("damaged_anvil", builder()));
    public static final Item CHISELED_QUARTZ_BLOCK = register(new Item("chiseled_quartz_block", builder()));
    public static final Item QUARTZ_BLOCK = register(new Item("quartz_block", builder()));
    public static final Item QUARTZ_BRICKS = register(new Item("quartz_bricks", builder()));
    public static final Item QUARTZ_PILLAR = register(new Item("quartz_pillar", builder()));
    public static final Item QUARTZ_STAIRS = register(new Item("quartz_stairs", builder()));
    public static final Item WHITE_TERRACOTTA = register(new Item("white_terracotta", builder()));
    public static final Item ORANGE_TERRACOTTA = register(new Item("orange_terracotta", builder()));
    public static final Item MAGENTA_TERRACOTTA = register(new Item("magenta_terracotta", builder()));
    public static final Item LIGHT_BLUE_TERRACOTTA = register(new Item("light_blue_terracotta", builder()));
    public static final Item YELLOW_TERRACOTTA = register(new Item("yellow_terracotta", builder()));
    public static final Item LIME_TERRACOTTA = register(new Item("lime_terracotta", builder()));
    public static final Item PINK_TERRACOTTA = register(new Item("pink_terracotta", builder()));
    public static final Item GRAY_TERRACOTTA = register(new Item("gray_terracotta", builder()));
    public static final Item LIGHT_GRAY_TERRACOTTA = register(new Item("light_gray_terracotta", builder()));
    public static final Item CYAN_TERRACOTTA = register(new Item("cyan_terracotta", builder()));
    public static final Item PURPLE_TERRACOTTA = register(new Item("purple_terracotta", builder()));
    public static final Item BLUE_TERRACOTTA = register(new Item("blue_terracotta", builder()));
    public static final Item BROWN_TERRACOTTA = register(new Item("brown_terracotta", builder()));
    public static final Item GREEN_TERRACOTTA = register(new Item("green_terracotta", builder()));
    public static final Item RED_TERRACOTTA = register(new Item("red_terracotta", builder()));
    public static final Item BLACK_TERRACOTTA = register(new Item("black_terracotta", builder()));
    public static final Item BARRIER = register(new Item("barrier", builder()));
    public static final Item LIGHT = register(new Item("light", builder()));
    public static final Item HAY_BLOCK = register(new Item("hay_block", builder()));
    public static final Item WHITE_CARPET = register(new Item("white_carpet", builder()));
    public static final Item ORANGE_CARPET = register(new Item("orange_carpet", builder()));
    public static final Item MAGENTA_CARPET = register(new Item("magenta_carpet", builder()));
    public static final Item LIGHT_BLUE_CARPET = register(new Item("light_blue_carpet", builder()));
    public static final Item YELLOW_CARPET = register(new Item("yellow_carpet", builder()));
    public static final Item LIME_CARPET = register(new Item("lime_carpet", builder()));
    public static final Item PINK_CARPET = register(new Item("pink_carpet", builder()));
    public static final Item GRAY_CARPET = register(new Item("gray_carpet", builder()));
    public static final Item LIGHT_GRAY_CARPET = register(new Item("light_gray_carpet", builder()));
    public static final Item CYAN_CARPET = register(new Item("cyan_carpet", builder()));
    public static final Item PURPLE_CARPET = register(new Item("purple_carpet", builder()));
    public static final Item BLUE_CARPET = register(new Item("blue_carpet", builder()));
    public static final Item BROWN_CARPET = register(new Item("brown_carpet", builder()));
    public static final Item GREEN_CARPET = register(new Item("green_carpet", builder()));
    public static final Item RED_CARPET = register(new Item("red_carpet", builder()));
    public static final Item BLACK_CARPET = register(new Item("black_carpet", builder()));
    public static final Item TERRACOTTA = register(new Item("terracotta", builder()));
    public static final Item PACKED_ICE = register(new Item("packed_ice", builder()));
    public static final Item DIRT_PATH = register(new Item("dirt_path", builder()));
    public static final Item SUNFLOWER = register(new Item("sunflower", builder()));
    public static final Item LILAC = register(new Item("lilac", builder()));
    public static final Item ROSE_BUSH = register(new Item("rose_bush", builder()));
    public static final Item PEONY = register(new Item("peony", builder()));
    public static final Item TALL_GRASS = register(new Item("tall_grass", builder()));
    public static final Item LARGE_FERN = register(new Item("large_fern", builder()));
    public static final Item WHITE_STAINED_GLASS = register(new Item("white_stained_glass", builder()));
    public static final Item ORANGE_STAINED_GLASS = register(new Item("orange_stained_glass", builder()));
    public static final Item MAGENTA_STAINED_GLASS = register(new Item("magenta_stained_glass", builder()));
    public static final Item LIGHT_BLUE_STAINED_GLASS = register(new Item("light_blue_stained_glass", builder()));
    public static final Item YELLOW_STAINED_GLASS = register(new Item("yellow_stained_glass", builder()));
    public static final Item LIME_STAINED_GLASS = register(new Item("lime_stained_glass", builder()));
    public static final Item PINK_STAINED_GLASS = register(new Item("pink_stained_glass", builder()));
    public static final Item GRAY_STAINED_GLASS = register(new Item("gray_stained_glass", builder()));
    public static final Item LIGHT_GRAY_STAINED_GLASS = register(new Item("light_gray_stained_glass", builder()));
    public static final Item CYAN_STAINED_GLASS = register(new Item("cyan_stained_glass", builder()));
    public static final Item PURPLE_STAINED_GLASS = register(new Item("purple_stained_glass", builder()));
    public static final Item BLUE_STAINED_GLASS = register(new Item("blue_stained_glass", builder()));
    public static final Item BROWN_STAINED_GLASS = register(new Item("brown_stained_glass", builder()));
    public static final Item GREEN_STAINED_GLASS = register(new Item("green_stained_glass", builder()));
    public static final Item RED_STAINED_GLASS = register(new Item("red_stained_glass", builder()));
    public static final Item BLACK_STAINED_GLASS = register(new Item("black_stained_glass", builder()));
    public static final Item WHITE_STAINED_GLASS_PANE = register(new Item("white_stained_glass_pane", builder()));
    public static final Item ORANGE_STAINED_GLASS_PANE = register(new Item("orange_stained_glass_pane", builder()));
    public static final Item MAGENTA_STAINED_GLASS_PANE = register(new Item("magenta_stained_glass_pane", builder()));
    public static final Item LIGHT_BLUE_STAINED_GLASS_PANE = register(new Item("light_blue_stained_glass_pane", builder()));
    public static final Item YELLOW_STAINED_GLASS_PANE = register(new Item("yellow_stained_glass_pane", builder()));
    public static final Item LIME_STAINED_GLASS_PANE = register(new Item("lime_stained_glass_pane", builder()));
    public static final Item PINK_STAINED_GLASS_PANE = register(new Item("pink_stained_glass_pane", builder()));
    public static final Item GRAY_STAINED_GLASS_PANE = register(new Item("gray_stained_glass_pane", builder()));
    public static final Item LIGHT_GRAY_STAINED_GLASS_PANE = register(new Item("light_gray_stained_glass_pane", builder()));
    public static final Item CYAN_STAINED_GLASS_PANE = register(new Item("cyan_stained_glass_pane", builder()));
    public static final Item PURPLE_STAINED_GLASS_PANE = register(new Item("purple_stained_glass_pane", builder()));
    public static final Item BLUE_STAINED_GLASS_PANE = register(new Item("blue_stained_glass_pane", builder()));
    public static final Item BROWN_STAINED_GLASS_PANE = register(new Item("brown_stained_glass_pane", builder()));
    public static final Item GREEN_STAINED_GLASS_PANE = register(new Item("green_stained_glass_pane", builder()));
    public static final Item RED_STAINED_GLASS_PANE = register(new Item("red_stained_glass_pane", builder()));
    public static final Item BLACK_STAINED_GLASS_PANE = register(new Item("black_stained_glass_pane", builder()));
    public static final Item PRISMARINE = register(new Item("prismarine", builder()));
    public static final Item PRISMARINE_BRICKS = register(new Item("prismarine_bricks", builder()));
    public static final Item DARK_PRISMARINE = register(new Item("dark_prismarine", builder()));
    public static final Item PRISMARINE_STAIRS = register(new Item("prismarine_stairs", builder()));
    public static final Item PRISMARINE_BRICK_STAIRS = register(new Item("prismarine_brick_stairs", builder()));
    public static final Item DARK_PRISMARINE_STAIRS = register(new Item("dark_prismarine_stairs", builder()));
    public static final Item SEA_LANTERN = register(new Item("sea_lantern", builder()));
    public static final Item RED_SANDSTONE = register(new Item("red_sandstone", builder()));
    public static final Item CHISELED_RED_SANDSTONE = register(new Item("chiseled_red_sandstone", builder()));
    public static final Item CUT_RED_SANDSTONE = register(new Item("cut_red_sandstone", builder()));
    public static final Item RED_SANDSTONE_STAIRS = register(new Item("red_sandstone_stairs", builder()));
    public static final Item REPEATING_COMMAND_BLOCK = register(new Item("repeating_command_block", builder()));
    public static final Item CHAIN_COMMAND_BLOCK = register(new Item("chain_command_block", builder()));
    public static final Item MAGMA_BLOCK = register(new Item("magma_block", builder()));
    public static final Item NETHER_WART_BLOCK = register(new Item("nether_wart_block", builder()));
    public static final Item WARPED_WART_BLOCK = register(new Item("warped_wart_block", builder()));
    public static final Item RED_NETHER_BRICKS = register(new Item("red_nether_bricks", builder()));
    public static final Item BONE_BLOCK = register(new Item("bone_block", builder()));
    public static final Item STRUCTURE_VOID = register(new Item("structure_void", builder()));
    public static final Item SHULKER_BOX = register(new Item("shulker_box", builder().stackSize(1)));
    public static final Item WHITE_SHULKER_BOX = register(new Item("white_shulker_box", builder().stackSize(1)));
    public static final Item ORANGE_SHULKER_BOX = register(new Item("orange_shulker_box", builder().stackSize(1)));
    public static final Item MAGENTA_SHULKER_BOX = register(new Item("magenta_shulker_box", builder().stackSize(1)));
    public static final Item LIGHT_BLUE_SHULKER_BOX = register(new Item("light_blue_shulker_box", builder().stackSize(1)));
    public static final Item YELLOW_SHULKER_BOX = register(new Item("yellow_shulker_box", builder().stackSize(1)));
    public static final Item LIME_SHULKER_BOX = register(new Item("lime_shulker_box", builder().stackSize(1)));
    public static final Item PINK_SHULKER_BOX = register(new Item("pink_shulker_box", builder().stackSize(1)));
    public static final Item GRAY_SHULKER_BOX = register(new Item("gray_shulker_box", builder().stackSize(1)));
    public static final Item LIGHT_GRAY_SHULKER_BOX = register(new Item("light_gray_shulker_box", builder().stackSize(1)));
    public static final Item CYAN_SHULKER_BOX = register(new Item("cyan_shulker_box", builder().stackSize(1)));
    public static final Item PURPLE_SHULKER_BOX = register(new Item("purple_shulker_box", builder().stackSize(1)));
    public static final Item BLUE_SHULKER_BOX = register(new Item("blue_shulker_box", builder().stackSize(1)));
    public static final Item BROWN_SHULKER_BOX = register(new Item("brown_shulker_box", builder().stackSize(1)));
    public static final Item GREEN_SHULKER_BOX = register(new Item("green_shulker_box", builder().stackSize(1)));
    public static final Item RED_SHULKER_BOX = register(new Item("red_shulker_box", builder().stackSize(1)));
    public static final Item BLACK_SHULKER_BOX = register(new Item("black_shulker_box", builder().stackSize(1)));
    public static final Item WHITE_GLAZED_TERRACOTTA = register(new Item("white_glazed_terracotta", builder()));
    public static final Item ORANGE_GLAZED_TERRACOTTA = register(new Item("orange_glazed_terracotta", builder()));
    public static final Item MAGENTA_GLAZED_TERRACOTTA = register(new Item("magenta_glazed_terracotta", builder()));
    public static final Item LIGHT_BLUE_GLAZED_TERRACOTTA = register(new Item("light_blue_glazed_terracotta", builder()));
    public static final Item YELLOW_GLAZED_TERRACOTTA = register(new Item("yellow_glazed_terracotta", builder()));
    public static final Item LIME_GLAZED_TERRACOTTA = register(new Item("lime_glazed_terracotta", builder()));
    public static final Item PINK_GLAZED_TERRACOTTA = register(new Item("pink_glazed_terracotta", builder()));
    public static final Item GRAY_GLAZED_TERRACOTTA = register(new Item("gray_glazed_terracotta", builder()));
    public static final Item LIGHT_GRAY_GLAZED_TERRACOTTA = register(new Item("light_gray_glazed_terracotta", builder()));
    public static final Item CYAN_GLAZED_TERRACOTTA = register(new Item("cyan_glazed_terracotta", builder()));
    public static final Item PURPLE_GLAZED_TERRACOTTA = register(new Item("purple_glazed_terracotta", builder()));
    public static final Item BLUE_GLAZED_TERRACOTTA = register(new Item("blue_glazed_terracotta", builder()));
    public static final Item BROWN_GLAZED_TERRACOTTA = register(new Item("brown_glazed_terracotta", builder()));
    public static final Item GREEN_GLAZED_TERRACOTTA = register(new Item("green_glazed_terracotta", builder()));
    public static final Item RED_GLAZED_TERRACOTTA = register(new Item("red_glazed_terracotta", builder()));
    public static final Item BLACK_GLAZED_TERRACOTTA = register(new Item("black_glazed_terracotta", builder()));
    public static final Item WHITE_CONCRETE = register(new Item("white_concrete", builder()));
    public static final Item ORANGE_CONCRETE = register(new Item("orange_concrete", builder()));
    public static final Item MAGENTA_CONCRETE = register(new Item("magenta_concrete", builder()));
    public static final Item LIGHT_BLUE_CONCRETE = register(new Item("light_blue_concrete", builder()));
    public static final Item YELLOW_CONCRETE = register(new Item("yellow_concrete", builder()));
    public static final Item LIME_CONCRETE = register(new Item("lime_concrete", builder()));
    public static final Item PINK_CONCRETE = register(new Item("pink_concrete", builder()));
    public static final Item GRAY_CONCRETE = register(new Item("gray_concrete", builder()));
    public static final Item LIGHT_GRAY_CONCRETE = register(new Item("light_gray_concrete", builder()));
    public static final Item CYAN_CONCRETE = register(new Item("cyan_concrete", builder()));
    public static final Item PURPLE_CONCRETE = register(new Item("purple_concrete", builder()));
    public static final Item BLUE_CONCRETE = register(new Item("blue_concrete", builder()));
    public static final Item BROWN_CONCRETE = register(new Item("brown_concrete", builder()));
    public static final Item GREEN_CONCRETE = register(new Item("green_concrete", builder()));
    public static final Item RED_CONCRETE = register(new Item("red_concrete", builder()));
    public static final Item BLACK_CONCRETE = register(new Item("black_concrete", builder()));
    public static final Item WHITE_CONCRETE_POWDER = register(new Item("white_concrete_powder", builder()));
    public static final Item ORANGE_CONCRETE_POWDER = register(new Item("orange_concrete_powder", builder()));
    public static final Item MAGENTA_CONCRETE_POWDER = register(new Item("magenta_concrete_powder", builder()));
    public static final Item LIGHT_BLUE_CONCRETE_POWDER = register(new Item("light_blue_concrete_powder", builder()));
    public static final Item YELLOW_CONCRETE_POWDER = register(new Item("yellow_concrete_powder", builder()));
    public static final Item LIME_CONCRETE_POWDER = register(new Item("lime_concrete_powder", builder()));
    public static final Item PINK_CONCRETE_POWDER = register(new Item("pink_concrete_powder", builder()));
    public static final Item GRAY_CONCRETE_POWDER = register(new Item("gray_concrete_powder", builder()));
    public static final Item LIGHT_GRAY_CONCRETE_POWDER = register(new Item("light_gray_concrete_powder", builder()));
    public static final Item CYAN_CONCRETE_POWDER = register(new Item("cyan_concrete_powder", builder()));
    public static final Item PURPLE_CONCRETE_POWDER = register(new Item("purple_concrete_powder", builder()));
    public static final Item BLUE_CONCRETE_POWDER = register(new Item("blue_concrete_powder", builder()));
    public static final Item BROWN_CONCRETE_POWDER = register(new Item("brown_concrete_powder", builder()));
    public static final Item GREEN_CONCRETE_POWDER = register(new Item("green_concrete_powder", builder()));
    public static final Item RED_CONCRETE_POWDER = register(new Item("red_concrete_powder", builder()));
    public static final Item BLACK_CONCRETE_POWDER = register(new Item("black_concrete_powder", builder()));
    public static final Item TURTLE_EGG = register(new Item("turtle_egg", builder()));
    public static final Item DEAD_TUBE_CORAL_BLOCK = register(new Item("dead_tube_coral_block", builder()));
    public static final Item DEAD_BRAIN_CORAL_BLOCK = register(new Item("dead_brain_coral_block", builder()));
    public static final Item DEAD_BUBBLE_CORAL_BLOCK = register(new Item("dead_bubble_coral_block", builder()));
    public static final Item DEAD_FIRE_CORAL_BLOCK = register(new Item("dead_fire_coral_block", builder()));
    public static final Item DEAD_HORN_CORAL_BLOCK = register(new Item("dead_horn_coral_block", builder()));
    public static final Item TUBE_CORAL_BLOCK = register(new Item("tube_coral_block", builder()));
    public static final Item BRAIN_CORAL_BLOCK = register(new Item("brain_coral_block", builder()));
    public static final Item BUBBLE_CORAL_BLOCK = register(new Item("bubble_coral_block", builder()));
    public static final Item FIRE_CORAL_BLOCK = register(new Item("fire_coral_block", builder()));
    public static final Item HORN_CORAL_BLOCK = register(new Item("horn_coral_block", builder()));
    public static final Item TUBE_CORAL = register(new Item("tube_coral", builder()));
    public static final Item BRAIN_CORAL = register(new Item("brain_coral", builder()));
    public static final Item BUBBLE_CORAL = register(new Item("bubble_coral", builder()));
    public static final Item FIRE_CORAL = register(new Item("fire_coral", builder()));
    public static final Item HORN_CORAL = register(new Item("horn_coral", builder()));
    public static final Item DEAD_BRAIN_CORAL = register(new Item("dead_brain_coral", builder()));
    public static final Item DEAD_BUBBLE_CORAL = register(new Item("dead_bubble_coral", builder()));
    public static final Item DEAD_FIRE_CORAL = register(new Item("dead_fire_coral", builder()));
    public static final Item DEAD_HORN_CORAL = register(new Item("dead_horn_coral", builder()));
    public static final Item DEAD_TUBE_CORAL = register(new Item("dead_tube_coral", builder()));
    public static final Item TUBE_CORAL_FAN = register(new Item("tube_coral_fan", builder()));
    public static final Item BRAIN_CORAL_FAN = register(new Item("brain_coral_fan", builder()));
    public static final Item BUBBLE_CORAL_FAN = register(new Item("bubble_coral_fan", builder()));
    public static final Item FIRE_CORAL_FAN = register(new Item("fire_coral_fan", builder()));
    public static final Item HORN_CORAL_FAN = register(new Item("horn_coral_fan", builder()));
    public static final Item DEAD_TUBE_CORAL_FAN = register(new Item("dead_tube_coral_fan", builder()));
    public static final Item DEAD_BRAIN_CORAL_FAN = register(new Item("dead_brain_coral_fan", builder()));
    public static final Item DEAD_BUBBLE_CORAL_FAN = register(new Item("dead_bubble_coral_fan", builder()));
    public static final Item DEAD_FIRE_CORAL_FAN = register(new Item("dead_fire_coral_fan", builder()));
    public static final Item DEAD_HORN_CORAL_FAN = register(new Item("dead_horn_coral_fan", builder()));
    public static final Item BLUE_ICE = register(new Item("blue_ice", builder()));
    public static final Item CONDUIT = register(new Item("conduit", builder()));
    public static final Item POLISHED_GRANITE_STAIRS = register(new Item("polished_granite_stairs", builder()));
    public static final Item SMOOTH_RED_SANDSTONE_STAIRS = register(new Item("smooth_red_sandstone_stairs", builder()));
    public static final Item MOSSY_STONE_BRICK_STAIRS = register(new Item("mossy_stone_brick_stairs", builder()));
    public static final Item POLISHED_DIORITE_STAIRS = register(new Item("polished_diorite_stairs", builder()));
    public static final Item MOSSY_COBBLESTONE_STAIRS = register(new Item("mossy_cobblestone_stairs", builder()));
    public static final Item END_STONE_BRICK_STAIRS = register(new Item("end_stone_brick_stairs", builder()));
    public static final Item STONE_STAIRS = register(new Item("stone_stairs", builder()));
    public static final Item SMOOTH_SANDSTONE_STAIRS = register(new Item("smooth_sandstone_stairs", builder()));
    public static final Item SMOOTH_QUARTZ_STAIRS = register(new Item("smooth_quartz_stairs", builder()));
    public static final Item GRANITE_STAIRS = register(new Item("granite_stairs", builder()));
    public static final Item ANDESITE_STAIRS = register(new Item("andesite_stairs", builder()));
    public static final Item RED_NETHER_BRICK_STAIRS = register(new Item("red_nether_brick_stairs", builder()));
    public static final Item POLISHED_ANDESITE_STAIRS = register(new Item("polished_andesite_stairs", builder()));
    public static final Item DIORITE_STAIRS = register(new Item("diorite_stairs", builder()));
    public static final Item COBBLED_DEEPSLATE_STAIRS = register(new Item("cobbled_deepslate_stairs", builder()));
    public static final Item POLISHED_DEEPSLATE_STAIRS = register(new Item("polished_deepslate_stairs", builder()));
    public static final Item DEEPSLATE_BRICK_STAIRS = register(new Item("deepslate_brick_stairs", builder()));
    public static final Item DEEPSLATE_TILE_STAIRS = register(new Item("deepslate_tile_stairs", builder()));
    public static final Item POLISHED_GRANITE_SLAB = register(new Item("polished_granite_slab", builder()));
    public static final Item SMOOTH_RED_SANDSTONE_SLAB = register(new Item("smooth_red_sandstone_slab", builder()));
    public static final Item MOSSY_STONE_BRICK_SLAB = register(new Item("mossy_stone_brick_slab", builder()));
    public static final Item POLISHED_DIORITE_SLAB = register(new Item("polished_diorite_slab", builder()));
    public static final Item MOSSY_COBBLESTONE_SLAB = register(new Item("mossy_cobblestone_slab", builder()));
    public static final Item END_STONE_BRICK_SLAB = register(new Item("end_stone_brick_slab", builder()));
    public static final Item SMOOTH_SANDSTONE_SLAB = register(new Item("smooth_sandstone_slab", builder()));
    public static final Item SMOOTH_QUARTZ_SLAB = register(new Item("smooth_quartz_slab", builder()));
    public static final Item GRANITE_SLAB = register(new Item("granite_slab", builder()));
    public static final Item ANDESITE_SLAB = register(new Item("andesite_slab", builder()));
    public static final Item RED_NETHER_BRICK_SLAB = register(new Item("red_nether_brick_slab", builder()));
    public static final Item POLISHED_ANDESITE_SLAB = register(new Item("polished_andesite_slab", builder()));
    public static final Item DIORITE_SLAB = register(new Item("diorite_slab", builder()));
    public static final Item COBBLED_DEEPSLATE_SLAB = register(new Item("cobbled_deepslate_slab", builder()));
    public static final Item POLISHED_DEEPSLATE_SLAB = register(new Item("polished_deepslate_slab", builder()));
    public static final Item DEEPSLATE_BRICK_SLAB = register(new Item("deepslate_brick_slab", builder()));
    public static final Item DEEPSLATE_TILE_SLAB = register(new Item("deepslate_tile_slab", builder()));
    public static final Item SCAFFOLDING = register(new Item("scaffolding", builder()));
    public static final Item REDSTONE = register(new Item("redstone", builder()));
    public static final Item REDSTONE_TORCH = register(new Item("redstone_torch", builder()));
    public static final Item REDSTONE_BLOCK = register(new Item("redstone_block", builder()));
    public static final Item REPEATER = register(new Item("repeater", builder()));
    public static final Item COMPARATOR = register(new Item("comparator", builder()));
    public static final Item PISTON = register(new Item("piston", builder()));
    public static final Item STICKY_PISTON = register(new Item("sticky_piston", builder()));
    public static final Item SLIME_BLOCK = register(new Item("slime_block", builder()));
    public static final Item HONEY_BLOCK = register(new Item("honey_block", builder()));
    public static final Item OBSERVER = register(new Item("observer", builder()));
    public static final Item HOPPER = register(new Item("hopper", builder()));
    public static final Item DISPENSER = register(new Item("dispenser", builder()));
    public static final Item DROPPER = register(new Item("dropper", builder()));
    public static final Item LECTERN = register(new Item("lectern", builder()));
    public static final Item TARGET = register(new Item("target", builder()));
    public static final Item LEVER = register(new Item("lever", builder()));
    public static final Item LIGHTNING_ROD = register(new Item("lightning_rod", builder()));
    public static final Item DAYLIGHT_DETECTOR = register(new Item("daylight_detector", builder()));
    public static final Item SCULK_SENSOR = register(new Item("sculk_sensor", builder()));
    public static final Item TRIPWIRE_HOOK = register(new Item("tripwire_hook", builder()));
    public static final Item TRAPPED_CHEST = register(new Item("trapped_chest", builder()));
    public static final Item TNT = register(new Item("tnt", builder()));
    public static final Item REDSTONE_LAMP = register(new Item("redstone_lamp", builder()));
    public static final Item NOTE_BLOCK = register(new Item("note_block", builder()));
    public static final Item STONE_BUTTON = register(new Item("stone_button", builder()));
    public static final Item POLISHED_BLACKSTONE_BUTTON = register(new Item("polished_blackstone_button", builder()));
    public static final Item OAK_BUTTON = register(new Item("oak_button", builder()));
    public static final Item SPRUCE_BUTTON = register(new Item("spruce_button", builder()));
    public static final Item BIRCH_BUTTON = register(new Item("birch_button", builder()));
    public static final Item JUNGLE_BUTTON = register(new Item("jungle_button", builder()));
    public static final Item ACACIA_BUTTON = register(new Item("acacia_button", builder()));
    public static final Item DARK_OAK_BUTTON = register(new Item("dark_oak_button", builder()));
    public static final Item MANGROVE_BUTTON = register(new Item("mangrove_button", builder()));
    public static final Item BAMBOO_BUTTON = register(new Item("bamboo_button", builder()));
    public static final Item CRIMSON_BUTTON = register(new Item("crimson_button", builder()));
    public static final Item WARPED_BUTTON = register(new Item("warped_button", builder()));
    public static final Item STONE_PRESSURE_PLATE = register(new Item("stone_pressure_plate", builder()));
    public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE = register(new Item("polished_blackstone_pressure_plate", builder()));
    public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE = register(new Item("light_weighted_pressure_plate", builder()));
    public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE = register(new Item("heavy_weighted_pressure_plate", builder()));
    public static final Item OAK_PRESSURE_PLATE = register(new Item("oak_pressure_plate", builder()));
    public static final Item SPRUCE_PRESSURE_PLATE = register(new Item("spruce_pressure_plate", builder()));
    public static final Item BIRCH_PRESSURE_PLATE = register(new Item("birch_pressure_plate", builder()));
    public static final Item JUNGLE_PRESSURE_PLATE = register(new Item("jungle_pressure_plate", builder()));
    public static final Item ACACIA_PRESSURE_PLATE = register(new Item("acacia_pressure_plate", builder()));
    public static final Item DARK_OAK_PRESSURE_PLATE = register(new Item("dark_oak_pressure_plate", builder()));
    public static final Item MANGROVE_PRESSURE_PLATE = register(new Item("mangrove_pressure_plate", builder()));
    public static final Item BAMBOO_PRESSURE_PLATE = register(new Item("bamboo_pressure_plate", builder()));
    public static final Item CRIMSON_PRESSURE_PLATE = register(new Item("crimson_pressure_plate", builder()));
    public static final Item WARPED_PRESSURE_PLATE = register(new Item("warped_pressure_plate", builder()));
    public static final Item IRON_DOOR = register(new Item("iron_door", builder()));
    public static final Item OAK_DOOR = register(new Item("oak_door", builder()));
    public static final Item SPRUCE_DOOR = register(new Item("spruce_door", builder()));
    public static final Item BIRCH_DOOR = register(new Item("birch_door", builder()));
    public static final Item JUNGLE_DOOR = register(new Item("jungle_door", builder()));
    public static final Item ACACIA_DOOR = register(new Item("acacia_door", builder()));
    public static final Item DARK_OAK_DOOR = register(new Item("dark_oak_door", builder()));
    public static final Item MANGROVE_DOOR = register(new Item("mangrove_door", builder()));
    public static final Item BAMBOO_DOOR = register(new Item("bamboo_door", builder()));
    public static final Item CRIMSON_DOOR = register(new Item("crimson_door", builder()));
    public static final Item WARPED_DOOR = register(new Item("warped_door", builder()));
    public static final Item IRON_TRAPDOOR = register(new Item("iron_trapdoor", builder()));
    public static final Item OAK_TRAPDOOR = register(new Item("oak_trapdoor", builder()));
    public static final Item SPRUCE_TRAPDOOR = register(new Item("spruce_trapdoor", builder()));
    public static final Item BIRCH_TRAPDOOR = register(new Item("birch_trapdoor", builder()));
    public static final Item JUNGLE_TRAPDOOR = register(new Item("jungle_trapdoor", builder()));
    public static final Item ACACIA_TRAPDOOR = register(new Item("acacia_trapdoor", builder()));
    public static final Item DARK_OAK_TRAPDOOR = register(new Item("dark_oak_trapdoor", builder()));
    public static final Item MANGROVE_TRAPDOOR = register(new Item("mangrove_trapdoor", builder()));
    public static final Item BAMBOO_TRAPDOOR = register(new Item("bamboo_trapdoor", builder()));
    public static final Item CRIMSON_TRAPDOOR = register(new Item("crimson_trapdoor", builder()));
    public static final Item WARPED_TRAPDOOR = register(new Item("warped_trapdoor", builder()));
    public static final Item OAK_FENCE_GATE = register(new Item("oak_fence_gate", builder()));
    public static final Item SPRUCE_FENCE_GATE = register(new Item("spruce_fence_gate", builder()));
    public static final Item BIRCH_FENCE_GATE = register(new Item("birch_fence_gate", builder()));
    public static final Item JUNGLE_FENCE_GATE = register(new Item("jungle_fence_gate", builder()));
    public static final Item ACACIA_FENCE_GATE = register(new Item("acacia_fence_gate", builder()));
    public static final Item DARK_OAK_FENCE_GATE = register(new Item("dark_oak_fence_gate", builder()));
    public static final Item MANGROVE_FENCE_GATE = register(new Item("mangrove_fence_gate", builder()));
    public static final Item BAMBOO_FENCE_GATE = register(new Item("bamboo_fence_gate", builder()));
    public static final Item CRIMSON_FENCE_GATE = register(new Item("crimson_fence_gate", builder()));
    public static final Item WARPED_FENCE_GATE = register(new Item("warped_fence_gate", builder()));
    public static final Item POWERED_RAIL = register(new Item("powered_rail", builder()));
    public static final Item DETECTOR_RAIL = register(new Item("detector_rail", builder()));
    public static final Item RAIL = register(new Item("rail", builder()));
    public static final Item ACTIVATOR_RAIL = register(new Item("activator_rail", builder()));
    public static final Item SADDLE = register(new Item("saddle", builder().stackSize(1)));
    public static final Item MINECART = register(new Item("minecart", builder().stackSize(1)));
    public static final Item CHEST_MINECART = register(new Item("chest_minecart", builder().stackSize(1)));
    public static final Item FURNACE_MINECART = register(new Item("furnace_minecart", builder().stackSize(1)));
    public static final Item TNT_MINECART = register(new Item("tnt_minecart", builder().stackSize(1)));
    public static final Item HOPPER_MINECART = register(new Item("hopper_minecart", builder().stackSize(1)));
    public static final Item CARROT_ON_A_STICK = register(new Item("carrot_on_a_stick", builder().stackSize(1).maxDamage(25)));
    public static final Item WARPED_FUNGUS_ON_A_STICK = register(new Item("warped_fungus_on_a_stick", builder().stackSize(1).maxDamage(100)));
    public static final ElytraItem ELYTRA = register(new ElytraItem("elytra", builder().stackSize(1).maxDamage(432)));
    public static final Item OAK_BOAT = register(new Item("oak_boat", builder().stackSize(1)));
    public static final Item OAK_CHEST_BOAT = register(new Item("oak_chest_boat", builder().stackSize(1)));
    public static final Item SPRUCE_BOAT = register(new Item("spruce_boat", builder().stackSize(1)));
    public static final Item SPRUCE_CHEST_BOAT = register(new Item("spruce_chest_boat", builder().stackSize(1)));
    public static final Item BIRCH_BOAT = register(new Item("birch_boat", builder().stackSize(1)));
    public static final Item BIRCH_CHEST_BOAT = register(new Item("birch_chest_boat", builder().stackSize(1)));
    public static final Item JUNGLE_BOAT = register(new Item("jungle_boat", builder().stackSize(1)));
    public static final Item JUNGLE_CHEST_BOAT = register(new Item("jungle_chest_boat", builder().stackSize(1)));
    public static final Item ACACIA_BOAT = register(new Item("acacia_boat", builder().stackSize(1)));
    public static final Item ACACIA_CHEST_BOAT = register(new Item("acacia_chest_boat", builder().stackSize(1)));
    public static final Item DARK_OAK_BOAT = register(new Item("dark_oak_boat", builder().stackSize(1)));
    public static final Item DARK_OAK_CHEST_BOAT = register(new Item("dark_oak_chest_boat", builder().stackSize(1)));
    public static final Item MANGROVE_BOAT = register(new Item("mangrove_boat", builder().stackSize(1)));
    public static final Item MANGROVE_CHEST_BOAT = register(new Item("mangrove_chest_boat", builder().stackSize(1)));
    public static final Item BAMBOO_RAFT = register(new Item("bamboo_raft", builder().stackSize(1)));
    public static final Item BAMBOO_CHEST_RAFT = register(new Item("bamboo_chest_raft", builder().stackSize(1)));
    public static final Item STRUCTURE_BLOCK = register(new Item("structure_block", builder()));
    public static final Item JIGSAW = register(new Item("jigsaw", builder()));
    public static final ArmorItem TURTLE_HELMET = register(new ArmorItem("turtle_helmet", ArmorMaterial.TURTLE, builder().stackSize(1).maxDamage(275)));
    public static final Item SCUTE = register(new Item("scute", builder()));
    public static final Item FLINT_AND_STEEL = register(new Item("flint_and_steel", builder().stackSize(1).maxDamage(64)));
    public static final Item APPLE = register(new Item("apple", builder()));
    public static final Item BOW = register(new Item("bow", builder().stackSize(1).maxDamage(384)));
    public static final ArrowItem ARROW = register(new ArrowItem("arrow", builder()));
    public static final Item COAL = register(new Item("coal", builder()));
    public static final Item CHARCOAL = register(new Item("charcoal", builder()));
    public static final Item DIAMOND = register(new Item("diamond", builder()));
    public static final Item EMERALD = register(new Item("emerald", builder()));
    public static final Item LAPIS_LAZULI = register(new Item("lapis_lazuli", builder()));
    public static final Item QUARTZ = register(new Item("quartz", builder()));
    public static final Item AMETHYST_SHARD = register(new Item("amethyst_shard", builder()));
    public static final Item RAW_IRON = register(new Item("raw_iron", builder()));
    public static final Item IRON_INGOT = register(new Item("iron_ingot", builder()));
    public static final Item RAW_COPPER = register(new Item("raw_copper", builder()));
    public static final Item COPPER_INGOT = register(new Item("copper_ingot", builder()));
    public static final Item RAW_GOLD = register(new Item("raw_gold", builder()));
    public static final Item GOLD_INGOT = register(new Item("gold_ingot", builder()));
    public static final Item NETHERITE_INGOT = register(new Item("netherite_ingot", builder()));
    public static final Item NETHERITE_SCRAP = register(new Item("netherite_scrap", builder()));
    public static final TieredItem WOODEN_SWORD = register(new TieredItem("wooden_sword", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59)));
    public static final TieredItem WOODEN_SHOVEL = register(new TieredItem("wooden_shovel", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59)));
    public static final TieredItem WOODEN_PICKAXE = register(new TieredItem("wooden_pickaxe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59)));
    public static final TieredItem WOODEN_AXE = register(new TieredItem("wooden_axe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59)));
    public static final TieredItem WOODEN_HOE = register(new TieredItem("wooden_hoe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59)));
    public static final TieredItem STONE_SWORD = register(new TieredItem("stone_sword", ToolTier.STONE, builder().stackSize(1).maxDamage(131)));
    public static final TieredItem STONE_SHOVEL = register(new TieredItem("stone_shovel", ToolTier.STONE, builder().stackSize(1).maxDamage(131)));
    public static final TieredItem STONE_PICKAXE = register(new TieredItem("stone_pickaxe", ToolTier.STONE, builder().stackSize(1).maxDamage(131)));
    public static final TieredItem STONE_AXE = register(new TieredItem("stone_axe", ToolTier.STONE, builder().stackSize(1).maxDamage(131)));
    public static final TieredItem STONE_HOE = register(new TieredItem("stone_hoe", ToolTier.STONE, builder().stackSize(1).maxDamage(131)));
    public static final TieredItem GOLDEN_SWORD = register(new TieredItem("golden_sword", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32)));
    public static final TieredItem GOLDEN_SHOVEL = register(new TieredItem("golden_shovel", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32)));
    public static final TieredItem GOLDEN_PICKAXE = register(new TieredItem("golden_pickaxe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32)));
    public static final TieredItem GOLDEN_AXE = register(new TieredItem("golden_axe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32)));
    public static final TieredItem GOLDEN_HOE = register(new TieredItem("golden_hoe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32)));
    public static final TieredItem IRON_SWORD = register(new TieredItem("iron_sword", ToolTier.IRON, builder().stackSize(1).maxDamage(250)));
    public static final TieredItem IRON_SHOVEL = register(new TieredItem("iron_shovel", ToolTier.IRON, builder().stackSize(1).maxDamage(250)));
    public static final TieredItem IRON_PICKAXE = register(new TieredItem("iron_pickaxe", ToolTier.IRON, builder().stackSize(1).maxDamage(250)));
    public static final TieredItem IRON_AXE = register(new TieredItem("iron_axe", ToolTier.IRON, builder().stackSize(1).maxDamage(250)));
    public static final TieredItem IRON_HOE = register(new TieredItem("iron_hoe", ToolTier.IRON, builder().stackSize(1).maxDamage(250)));
    public static final TieredItem DIAMOND_SWORD = register(new TieredItem("diamond_sword", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561)));
    public static final TieredItem DIAMOND_SHOVEL = register(new TieredItem("diamond_shovel", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561)));
    public static final TieredItem DIAMOND_PICKAXE = register(new TieredItem("diamond_pickaxe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561)));
    public static final TieredItem DIAMOND_AXE = register(new TieredItem("diamond_axe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561)));
    public static final TieredItem DIAMOND_HOE = register(new TieredItem("diamond_hoe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561)));
    public static final TieredItem NETHERITE_SWORD = register(new TieredItem("netherite_sword", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031)));
    public static final TieredItem NETHERITE_SHOVEL = register(new TieredItem("netherite_shovel", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031)));
    public static final TieredItem NETHERITE_PICKAXE = register(new TieredItem("netherite_pickaxe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031)));
    public static final TieredItem NETHERITE_AXE = register(new TieredItem("netherite_axe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031)));
    public static final TieredItem NETHERITE_HOE = register(new TieredItem("netherite_hoe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031)));
    public static final Item STICK = register(new Item("stick", builder()));
    public static final Item BOWL = register(new Item("bowl", builder()));
    public static final Item MUSHROOM_STEW = register(new Item("mushroom_stew", builder().stackSize(1)));
    public static final Item STRING = register(new Item("string", builder()));
    public static final Item FEATHER = register(new Item("feather", builder()));
    public static final Item GUNPOWDER = register(new Item("gunpowder", builder()));
    public static final Item WHEAT_SEEDS = register(new Item("wheat_seeds", builder()));
    public static final Item WHEAT = register(new Item("wheat", builder()));
    public static final Item BREAD = register(new Item("bread", builder()));
    public static final ArmorItem LEATHER_HELMET = register(new ArmorItem("leather_helmet", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(55)));
    public static final ArmorItem LEATHER_CHESTPLATE = register(new ArmorItem("leather_chestplate", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(80)));
    public static final ArmorItem LEATHER_LEGGINGS = register(new ArmorItem("leather_leggings", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(75)));
    public static final ArmorItem LEATHER_BOOTS = register(new ArmorItem("leather_boots", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(65)));
    public static final ArmorItem CHAINMAIL_HELMET = register(new ArmorItem("chainmail_helmet", ArmorMaterial.CHAIN, builder().stackSize(1).maxDamage(165)));
    public static final ArmorItem CHAINMAIL_CHESTPLATE = register(new ArmorItem("chainmail_chestplate", ArmorMaterial.CHAIN, builder().stackSize(1).maxDamage(240)));
    public static final ArmorItem CHAINMAIL_LEGGINGS = register(new ArmorItem("chainmail_leggings", ArmorMaterial.CHAIN, builder().stackSize(1).maxDamage(225)));
    public static final ArmorItem CHAINMAIL_BOOTS = register(new ArmorItem("chainmail_boots", ArmorMaterial.CHAIN, builder().stackSize(1).maxDamage(195)));
    public static final ArmorItem IRON_HELMET = register(new ArmorItem("iron_helmet", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(165)));
    public static final ArmorItem IRON_CHESTPLATE = register(new ArmorItem("iron_chestplate", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(240)));
    public static final ArmorItem IRON_LEGGINGS = register(new ArmorItem("iron_leggings", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(225)));
    public static final ArmorItem IRON_BOOTS = register(new ArmorItem("iron_boots", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(195)));
    public static final ArmorItem DIAMOND_HELMET = register(new ArmorItem("diamond_helmet", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(363)));
    public static final ArmorItem DIAMOND_CHESTPLATE = register(new ArmorItem("diamond_chestplate", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(528)));
    public static final ArmorItem DIAMOND_LEGGINGS = register(new ArmorItem("diamond_leggings", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(495)));
    public static final ArmorItem DIAMOND_BOOTS = register(new ArmorItem("diamond_boots", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(429)));
    public static final ArmorItem GOLDEN_HELMET = register(new ArmorItem("golden_helmet", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(77)));
    public static final ArmorItem GOLDEN_CHESTPLATE = register(new ArmorItem("golden_chestplate", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(112)));
    public static final ArmorItem GOLDEN_LEGGINGS = register(new ArmorItem("golden_leggings", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(105)));
    public static final ArmorItem GOLDEN_BOOTS = register(new ArmorItem("golden_boots", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(91)));
    public static final ArmorItem NETHERITE_HELMET = register(new ArmorItem("netherite_helmet", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(407)));
    public static final ArmorItem NETHERITE_CHESTPLATE = register(new ArmorItem("netherite_chestplate", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(592)));
    public static final ArmorItem NETHERITE_LEGGINGS = register(new ArmorItem("netherite_leggings", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(555)));
    public static final ArmorItem NETHERITE_BOOTS = register(new ArmorItem("netherite_boots", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(481)));
    public static final Item FLINT = register(new Item("flint", builder()));
    public static final Item PORKCHOP = register(new Item("porkchop", builder()));
    public static final Item COOKED_PORKCHOP = register(new Item("cooked_porkchop", builder()));
    public static final Item PAINTING = register(new Item("painting", builder()));
    public static final Item GOLDEN_APPLE = register(new Item("golden_apple", builder()));
    public static final Item ENCHANTED_GOLDEN_APPLE = register(new Item("enchanted_golden_apple", builder()));
    public static final Item OAK_SIGN = register(new Item("oak_sign", builder().stackSize(16)));
    public static final Item SPRUCE_SIGN = register(new Item("spruce_sign", builder().stackSize(16)));
    public static final Item BIRCH_SIGN = register(new Item("birch_sign", builder().stackSize(16)));
    public static final Item JUNGLE_SIGN = register(new Item("jungle_sign", builder().stackSize(16)));
    public static final Item ACACIA_SIGN = register(new Item("acacia_sign", builder().stackSize(16)));
    public static final Item DARK_OAK_SIGN = register(new Item("dark_oak_sign", builder().stackSize(16)));
    public static final Item MANGROVE_SIGN = register(new Item("mangrove_sign", builder().stackSize(16)));
    public static final Item BAMBOO_SIGN = register(new Item("bamboo_sign", builder().stackSize(16)));
    public static final Item CRIMSON_SIGN = register(new Item("crimson_sign", builder().stackSize(16)));
    public static final Item WARPED_SIGN = register(new Item("warped_sign", builder().stackSize(16)));
    public static final Item OAK_HANGING_SIGN = register(new Item("oak_hanging_sign", builder().stackSize(16)));
    public static final Item SPRUCE_HANGING_SIGN = register(new Item("spruce_hanging_sign", builder().stackSize(16)));
    public static final Item BIRCH_HANGING_SIGN = register(new Item("birch_hanging_sign", builder().stackSize(16)));
    public static final Item JUNGLE_HANGING_SIGN = register(new Item("jungle_hanging_sign", builder().stackSize(16)));
    public static final Item ACACIA_HANGING_SIGN = register(new Item("acacia_hanging_sign", builder().stackSize(16)));
    public static final Item DARK_OAK_HANGING_SIGN = register(new Item("dark_oak_hanging_sign", builder().stackSize(16)));
    public static final Item MANGROVE_HANGING_SIGN = register(new Item("mangrove_hanging_sign", builder().stackSize(16)));
    public static final Item BAMBOO_HANGING_SIGN = register(new Item("bamboo_hanging_sign", builder().stackSize(16)));
    public static final Item CRIMSON_HANGING_SIGN = register(new Item("crimson_hanging_sign", builder().stackSize(16)));
    public static final Item WARPED_HANGING_SIGN = register(new Item("warped_hanging_sign", builder().stackSize(16)));
    public static final Item BUCKET = register(new Item("bucket", builder().stackSize(16)));
    public static final Item WATER_BUCKET = register(new Item("water_bucket", builder().stackSize(1)));
    public static final Item LAVA_BUCKET = register(new Item("lava_bucket", builder().stackSize(1)));
    public static final Item POWDER_SNOW_BUCKET = register(new Item("powder_snow_bucket", builder().stackSize(1)));
    public static final Item SNOWBALL = register(new Item("snowball", builder().stackSize(16)));
    public static final Item LEATHER = register(new Item("leather", builder()));
    public static final Item MILK_BUCKET = register(new Item("milk_bucket", builder().stackSize(1)));
    public static final Item PUFFERFISH_BUCKET = register(new Item("pufferfish_bucket", builder().stackSize(1)));
    public static final Item SALMON_BUCKET = register(new Item("salmon_bucket", builder().stackSize(1)));
    public static final Item COD_BUCKET = register(new Item("cod_bucket", builder().stackSize(1)));
    public static final Item TROPICAL_FISH_BUCKET = register(new Item("tropical_fish_bucket", builder().stackSize(1)));
    public static final Item AXOLOTL_BUCKET = register(new Item("axolotl_bucket", builder().stackSize(1)));
    public static final Item TADPOLE_BUCKET = register(new Item("tadpole_bucket", builder().stackSize(1)));
    public static final Item BRICK = register(new Item("brick", builder()));
    public static final Item CLAY_BALL = register(new Item("clay_ball", builder()));
    public static final Item DRIED_KELP_BLOCK = register(new Item("dried_kelp_block", builder()));
    public static final Item PAPER = register(new Item("paper", builder()));
    public static final Item BOOK = register(new Item("book", builder()));
    public static final Item SLIME_BALL = register(new Item("slime_ball", builder()));
    public static final Item EGG = register(new Item("egg", builder().stackSize(16)));
    public static final CompassItem COMPASS = register(new CompassItem("compass", builder()));
    public static final Item RECOVERY_COMPASS = register(new Item("recovery_compass", builder()));
    public static final Item BUNDLE = register(new Item("bundle", builder().stackSize(1)));
    public static final Item FISHING_ROD = register(new Item("fishing_rod", builder().stackSize(1).maxDamage(64)));
    public static final Item CLOCK = register(new Item("clock", builder()));
    public static final Item SPYGLASS = register(new Item("spyglass", builder().stackSize(1)));
    public static final Item GLOWSTONE_DUST = register(new Item("glowstone_dust", builder()));
    public static final Item COD = register(new Item("cod", builder()));
    public static final Item SALMON = register(new Item("salmon", builder()));
    public static final Item TROPICAL_FISH = register(new Item("tropical_fish", builder()));
    public static final Item PUFFERFISH = register(new Item("pufferfish", builder()));
    public static final Item COOKED_COD = register(new Item("cooked_cod", builder()));
    public static final Item COOKED_SALMON = register(new Item("cooked_salmon", builder()));
    public static final Item INK_SAC = register(new Item("ink_sac", builder()));
    public static final Item GLOW_INK_SAC = register(new Item("glow_ink_sac", builder()));
    public static final Item COCOA_BEANS = register(new Item("cocoa_beans", builder()));
    public static final DyeItem WHITE_DYE = register(new DyeItem("white_dye", 0, builder()));
    public static final DyeItem ORANGE_DYE = register(new DyeItem("orange_dye", 1, builder()));
    public static final DyeItem MAGENTA_DYE = register(new DyeItem("magenta_dye", 2, builder()));
    public static final DyeItem LIGHT_BLUE_DYE = register(new DyeItem("light_blue_dye", 3, builder()));
    public static final DyeItem YELLOW_DYE = register(new DyeItem("yellow_dye", 4, builder()));
    public static final DyeItem LIME_DYE = register(new DyeItem("lime_dye", 5, builder()));
    public static final DyeItem PINK_DYE = register(new DyeItem("pink_dye", 6, builder()));
    public static final DyeItem GRAY_DYE = register(new DyeItem("gray_dye", 7, builder()));
    public static final DyeItem LIGHT_GRAY_DYE = register(new DyeItem("light_gray_dye", 8, builder()));
    public static final DyeItem CYAN_DYE = register(new DyeItem("cyan_dye", 9, builder()));
    public static final DyeItem PURPLE_DYE = register(new DyeItem("purple_dye", 10, builder()));
    public static final DyeItem BLUE_DYE = register(new DyeItem("blue_dye", 11, builder()));
    public static final DyeItem BROWN_DYE = register(new DyeItem("brown_dye", 12, builder()));
    public static final DyeItem GREEN_DYE = register(new DyeItem("green_dye", 13, builder()));
    public static final DyeItem RED_DYE = register(new DyeItem("red_dye", 14, builder()));
    public static final DyeItem BLACK_DYE = register(new DyeItem("black_dye", 15, builder()));
    public static final Item BONE_MEAL = register(new Item("bone_meal", builder()));
    public static final Item BONE = register(new Item("bone", builder()));
    public static final Item SUGAR = register(new Item("sugar", builder()));
    public static final Item CAKE = register(new Item("cake", builder().stackSize(1)));
    public static final Item WHITE_BED = register(new Item("white_bed", builder().stackSize(1)));
    public static final Item ORANGE_BED = register(new Item("orange_bed", builder().stackSize(1)));
    public static final Item MAGENTA_BED = register(new Item("magenta_bed", builder().stackSize(1)));
    public static final Item LIGHT_BLUE_BED = register(new Item("light_blue_bed", builder().stackSize(1)));
    public static final Item YELLOW_BED = register(new Item("yellow_bed", builder().stackSize(1)));
    public static final Item LIME_BED = register(new Item("lime_bed", builder().stackSize(1)));
    public static final Item PINK_BED = register(new Item("pink_bed", builder().stackSize(1)));
    public static final Item GRAY_BED = register(new Item("gray_bed", builder().stackSize(1)));
    public static final Item LIGHT_GRAY_BED = register(new Item("light_gray_bed", builder().stackSize(1)));
    public static final Item CYAN_BED = register(new Item("cyan_bed", builder().stackSize(1)));
    public static final Item PURPLE_BED = register(new Item("purple_bed", builder().stackSize(1)));
    public static final Item BLUE_BED = register(new Item("blue_bed", builder().stackSize(1)));
    public static final Item BROWN_BED = register(new Item("brown_bed", builder().stackSize(1)));
    public static final Item GREEN_BED = register(new Item("green_bed", builder().stackSize(1)));
    public static final Item RED_BED = register(new Item("red_bed", builder().stackSize(1)));
    public static final Item BLACK_BED = register(new Item("black_bed", builder().stackSize(1)));
    public static final Item COOKIE = register(new Item("cookie", builder()));
    public static final FilledMapItem FILLED_MAP = register(new FilledMapItem("filled_map", builder()));
    public static final Item SHEARS = register(new Item("shears", builder().stackSize(1).maxDamage(238)));
    public static final Item MELON_SLICE = register(new Item("melon_slice", builder()));
    public static final Item DRIED_KELP = register(new Item("dried_kelp", builder()));
    public static final Item PUMPKIN_SEEDS = register(new Item("pumpkin_seeds", builder()));
    public static final Item MELON_SEEDS = register(new Item("melon_seeds", builder()));
    public static final Item BEEF = register(new Item("beef", builder()));
    public static final Item COOKED_BEEF = register(new Item("cooked_beef", builder()));
    public static final Item CHICKEN = register(new Item("chicken", builder()));
    public static final Item COOKED_CHICKEN = register(new Item("cooked_chicken", builder()));
    public static final Item ROTTEN_FLESH = register(new Item("rotten_flesh", builder()));
    public static final Item ENDER_PEARL = register(new Item("ender_pearl", builder().stackSize(16)));
    public static final Item BLAZE_ROD = register(new Item("blaze_rod", builder()));
    public static final Item GHAST_TEAR = register(new Item("ghast_tear", builder()));
    public static final Item GOLD_NUGGET = register(new Item("gold_nugget", builder()));
    public static final Item NETHER_WART = register(new Item("nether_wart", builder()));
    public static final PotionItem POTION = register(new PotionItem("potion", builder().stackSize(1)));
    public static final Item GLASS_BOTTLE = register(new Item("glass_bottle", builder()));
    public static final Item SPIDER_EYE = register(new Item("spider_eye", builder()));
    public static final Item FERMENTED_SPIDER_EYE = register(new Item("fermented_spider_eye", builder()));
    public static final Item BLAZE_POWDER = register(new Item("blaze_powder", builder()));
    public static final Item MAGMA_CREAM = register(new Item("magma_cream", builder()));
    public static final Item BREWING_STAND = register(new Item("brewing_stand", builder()));
    public static final Item CAULDRON = register(new Item("cauldron", builder()));
    public static final Item ENDER_EYE = register(new Item("ender_eye", builder()));
    public static final Item GLISTERING_MELON_SLICE = register(new Item("glistering_melon_slice", builder()));
    public static final SpawnEggItem ALLAY_SPAWN_EGG = register(new SpawnEggItem("allay_spawn_egg", builder()));
    public static final SpawnEggItem AXOLOTL_SPAWN_EGG = register(new SpawnEggItem("axolotl_spawn_egg", builder()));
    public static final SpawnEggItem BAT_SPAWN_EGG = register(new SpawnEggItem("bat_spawn_egg", builder()));
    public static final SpawnEggItem BEE_SPAWN_EGG = register(new SpawnEggItem("bee_spawn_egg", builder()));
    public static final SpawnEggItem BLAZE_SPAWN_EGG = register(new SpawnEggItem("blaze_spawn_egg", builder()));
    public static final SpawnEggItem CAT_SPAWN_EGG = register(new SpawnEggItem("cat_spawn_egg", builder()));
    public static final SpawnEggItem CAMEL_SPAWN_EGG = register(new SpawnEggItem("camel_spawn_egg", builder()));
    public static final SpawnEggItem CAVE_SPIDER_SPAWN_EGG = register(new SpawnEggItem("cave_spider_spawn_egg", builder()));
    public static final SpawnEggItem CHICKEN_SPAWN_EGG = register(new SpawnEggItem("chicken_spawn_egg", builder()));
    public static final SpawnEggItem COD_SPAWN_EGG = register(new SpawnEggItem("cod_spawn_egg", builder()));
    public static final SpawnEggItem COW_SPAWN_EGG = register(new SpawnEggItem("cow_spawn_egg", builder()));
    public static final SpawnEggItem CREEPER_SPAWN_EGG = register(new SpawnEggItem("creeper_spawn_egg", builder()));
    public static final SpawnEggItem DOLPHIN_SPAWN_EGG = register(new SpawnEggItem("dolphin_spawn_egg", builder()));
    public static final SpawnEggItem DONKEY_SPAWN_EGG = register(new SpawnEggItem("donkey_spawn_egg", builder()));
    public static final SpawnEggItem DROWNED_SPAWN_EGG = register(new SpawnEggItem("drowned_spawn_egg", builder()));
    public static final SpawnEggItem ELDER_GUARDIAN_SPAWN_EGG = register(new SpawnEggItem("elder_guardian_spawn_egg", builder()));
    public static final SpawnEggItem ENDER_DRAGON_SPAWN_EGG = register(new SpawnEggItem("ender_dragon_spawn_egg", builder()));
    public static final SpawnEggItem ENDERMAN_SPAWN_EGG = register(new SpawnEggItem("enderman_spawn_egg", builder()));
    public static final SpawnEggItem ENDERMITE_SPAWN_EGG = register(new SpawnEggItem("endermite_spawn_egg", builder()));
    public static final SpawnEggItem EVOKER_SPAWN_EGG = register(new SpawnEggItem("evoker_spawn_egg", builder()));
    public static final SpawnEggItem FOX_SPAWN_EGG = register(new SpawnEggItem("fox_spawn_egg", builder()));
    public static final SpawnEggItem FROG_SPAWN_EGG = register(new SpawnEggItem("frog_spawn_egg", builder()));
    public static final SpawnEggItem GHAST_SPAWN_EGG = register(new SpawnEggItem("ghast_spawn_egg", builder()));
    public static final SpawnEggItem GLOW_SQUID_SPAWN_EGG = register(new SpawnEggItem("glow_squid_spawn_egg", builder()));
    public static final SpawnEggItem GOAT_SPAWN_EGG = register(new SpawnEggItem("goat_spawn_egg", builder()));
    public static final SpawnEggItem GUARDIAN_SPAWN_EGG = register(new SpawnEggItem("guardian_spawn_egg", builder()));
    public static final SpawnEggItem HOGLIN_SPAWN_EGG = register(new SpawnEggItem("hoglin_spawn_egg", builder()));
    public static final SpawnEggItem HORSE_SPAWN_EGG = register(new SpawnEggItem("horse_spawn_egg", builder()));
    public static final SpawnEggItem HUSK_SPAWN_EGG = register(new SpawnEggItem("husk_spawn_egg", builder()));
    public static final SpawnEggItem IRON_GOLEM_SPAWN_EGG = register(new SpawnEggItem("iron_golem_spawn_egg", builder()));
    public static final SpawnEggItem LLAMA_SPAWN_EGG = register(new SpawnEggItem("llama_spawn_egg", builder()));
    public static final SpawnEggItem MAGMA_CUBE_SPAWN_EGG = register(new SpawnEggItem("magma_cube_spawn_egg", builder()));
    public static final SpawnEggItem MOOSHROOM_SPAWN_EGG = register(new SpawnEggItem("mooshroom_spawn_egg", builder()));
    public static final SpawnEggItem MULE_SPAWN_EGG = register(new SpawnEggItem("mule_spawn_egg", builder()));
    public static final SpawnEggItem OCELOT_SPAWN_EGG = register(new SpawnEggItem("ocelot_spawn_egg", builder()));
    public static final SpawnEggItem PANDA_SPAWN_EGG = register(new SpawnEggItem("panda_spawn_egg", builder()));
    public static final SpawnEggItem PARROT_SPAWN_EGG = register(new SpawnEggItem("parrot_spawn_egg", builder()));
    public static final SpawnEggItem PHANTOM_SPAWN_EGG = register(new SpawnEggItem("phantom_spawn_egg", builder()));
    public static final SpawnEggItem PIG_SPAWN_EGG = register(new SpawnEggItem("pig_spawn_egg", builder()));
    public static final SpawnEggItem PIGLIN_SPAWN_EGG = register(new SpawnEggItem("piglin_spawn_egg", builder()));
    public static final SpawnEggItem PIGLIN_BRUTE_SPAWN_EGG = register(new SpawnEggItem("piglin_brute_spawn_egg", builder()));
    public static final SpawnEggItem PILLAGER_SPAWN_EGG = register(new SpawnEggItem("pillager_spawn_egg", builder()));
    public static final SpawnEggItem POLAR_BEAR_SPAWN_EGG = register(new SpawnEggItem("polar_bear_spawn_egg", builder()));
    public static final SpawnEggItem PUFFERFISH_SPAWN_EGG = register(new SpawnEggItem("pufferfish_spawn_egg", builder()));
    public static final SpawnEggItem RABBIT_SPAWN_EGG = register(new SpawnEggItem("rabbit_spawn_egg", builder()));
    public static final SpawnEggItem RAVAGER_SPAWN_EGG = register(new SpawnEggItem("ravager_spawn_egg", builder()));
    public static final SpawnEggItem SALMON_SPAWN_EGG = register(new SpawnEggItem("salmon_spawn_egg", builder()));
    public static final SpawnEggItem SHEEP_SPAWN_EGG = register(new SpawnEggItem("sheep_spawn_egg", builder()));
    public static final SpawnEggItem SHULKER_SPAWN_EGG = register(new SpawnEggItem("shulker_spawn_egg", builder()));
    public static final SpawnEggItem SILVERFISH_SPAWN_EGG = register(new SpawnEggItem("silverfish_spawn_egg", builder()));
    public static final SpawnEggItem SKELETON_SPAWN_EGG = register(new SpawnEggItem("skeleton_spawn_egg", builder()));
    public static final SpawnEggItem SKELETON_HORSE_SPAWN_EGG = register(new SpawnEggItem("skeleton_horse_spawn_egg", builder()));
    public static final SpawnEggItem SLIME_SPAWN_EGG = register(new SpawnEggItem("slime_spawn_egg", builder()));
    public static final SpawnEggItem SNOW_GOLEM_SPAWN_EGG = register(new SpawnEggItem("snow_golem_spawn_egg", builder()));
    public static final SpawnEggItem SPIDER_SPAWN_EGG = register(new SpawnEggItem("spider_spawn_egg", builder()));
    public static final SpawnEggItem SQUID_SPAWN_EGG = register(new SpawnEggItem("squid_spawn_egg", builder()));
    public static final SpawnEggItem STRAY_SPAWN_EGG = register(new SpawnEggItem("stray_spawn_egg", builder()));
    public static final SpawnEggItem STRIDER_SPAWN_EGG = register(new SpawnEggItem("strider_spawn_egg", builder()));
    public static final SpawnEggItem TADPOLE_SPAWN_EGG = register(new SpawnEggItem("tadpole_spawn_egg", builder()));
    public static final SpawnEggItem TRADER_LLAMA_SPAWN_EGG = register(new SpawnEggItem("trader_llama_spawn_egg", builder()));
    public static final SpawnEggItem TROPICAL_FISH_SPAWN_EGG = register(new SpawnEggItem("tropical_fish_spawn_egg", builder()));
    public static final SpawnEggItem TURTLE_SPAWN_EGG = register(new SpawnEggItem("turtle_spawn_egg", builder()));
    public static final SpawnEggItem VEX_SPAWN_EGG = register(new SpawnEggItem("vex_spawn_egg", builder()));
    public static final SpawnEggItem VILLAGER_SPAWN_EGG = register(new SpawnEggItem("villager_spawn_egg", builder()));
    public static final SpawnEggItem VINDICATOR_SPAWN_EGG = register(new SpawnEggItem("vindicator_spawn_egg", builder()));
    public static final SpawnEggItem WANDERING_TRADER_SPAWN_EGG = register(new SpawnEggItem("wandering_trader_spawn_egg", builder()));
    public static final SpawnEggItem WARDEN_SPAWN_EGG = register(new SpawnEggItem("warden_spawn_egg", builder()));
    public static final SpawnEggItem WITCH_SPAWN_EGG = register(new SpawnEggItem("witch_spawn_egg", builder()));
    public static final SpawnEggItem WITHER_SPAWN_EGG = register(new SpawnEggItem("wither_spawn_egg", builder()));
    public static final SpawnEggItem WITHER_SKELETON_SPAWN_EGG = register(new SpawnEggItem("wither_skeleton_spawn_egg", builder()));
    public static final SpawnEggItem WOLF_SPAWN_EGG = register(new SpawnEggItem("wolf_spawn_egg", builder()));
    public static final SpawnEggItem ZOGLIN_SPAWN_EGG = register(new SpawnEggItem("zoglin_spawn_egg", builder()));
    public static final SpawnEggItem ZOMBIE_SPAWN_EGG = register(new SpawnEggItem("zombie_spawn_egg", builder()));
    public static final SpawnEggItem ZOMBIE_HORSE_SPAWN_EGG = register(new SpawnEggItem("zombie_horse_spawn_egg", builder()));
    public static final SpawnEggItem ZOMBIE_VILLAGER_SPAWN_EGG = register(new SpawnEggItem("zombie_villager_spawn_egg", builder()));
    public static final SpawnEggItem ZOMBIFIED_PIGLIN_SPAWN_EGG = register(new SpawnEggItem("zombified_piglin_spawn_egg", builder()));
    public static final Item EXPERIENCE_BOTTLE = register(new Item("experience_bottle", builder()));
    public static final Item FIRE_CHARGE = register(new Item("fire_charge", builder()));
    public static final Item WRITABLE_BOOK = register(new Item("writable_book", builder().stackSize(1)));
    public static final Item WRITTEN_BOOK = register(new Item("written_book", builder().stackSize(16)));
    public static final Item ITEM_FRAME = register(new Item("item_frame", builder()));
    public static final Item GLOW_ITEM_FRAME = register(new Item("glow_item_frame", builder()));
    public static final Item FLOWER_POT = register(new Item("flower_pot", builder()));
    public static final Item CARROT = register(new Item("carrot", builder()));
    public static final Item POTATO = register(new Item("potato", builder()));
    public static final Item BAKED_POTATO = register(new Item("baked_potato", builder()));
    public static final Item POISONOUS_POTATO = register(new Item("poisonous_potato", builder()));
    public static final MapItem MAP = register(new MapItem("map", builder()));
    public static final Item GOLDEN_CARROT = register(new Item("golden_carrot", builder()));
    public static final Item SKELETON_SKULL = register(new Item("skeleton_skull", builder()));
    public static final Item WITHER_SKELETON_SKULL = register(new Item("wither_skeleton_skull", builder()));
    public static final Item PLAYER_HEAD = register(new Item("player_head", builder()));
    public static final Item ZOMBIE_HEAD = register(new Item("zombie_head", builder()));
    public static final Item CREEPER_HEAD = register(new Item("creeper_head", builder()));
    public static final Item DRAGON_HEAD = register(new Item("dragon_head", builder()));
    public static final Item PIGLIN_HEAD = register(new Item("piglin_head", builder()));
    public static final Item NETHER_STAR = register(new Item("nether_star", builder()));
    public static final Item PUMPKIN_PIE = register(new Item("pumpkin_pie", builder()));
    public static final Item FIREWORK_ROCKET = register(new Item("firework_rocket", builder()));
    public static final Item FIREWORK_STAR = register(new Item("firework_star", builder()));
    public static final Item ENCHANTED_BOOK = register(new Item("enchanted_book", builder().stackSize(1)));
    public static final Item NETHER_BRICK = register(new Item("nether_brick", builder()));
    public static final Item PRISMARINE_SHARD = register(new Item("prismarine_shard", builder()));
    public static final Item PRISMARINE_CRYSTALS = register(new Item("prismarine_crystals", builder()));
    public static final Item RABBIT = register(new Item("rabbit", builder()));
    public static final Item COOKED_RABBIT = register(new Item("cooked_rabbit", builder()));
    public static final Item RABBIT_STEW = register(new Item("rabbit_stew", builder().stackSize(1)));
    public static final Item RABBIT_FOOT = register(new Item("rabbit_foot", builder()));
    public static final Item RABBIT_HIDE = register(new Item("rabbit_hide", builder()));
    public static final Item ARMOR_STAND = register(new Item("armor_stand", builder().stackSize(16)));
    public static final Item IRON_HORSE_ARMOR = register(new Item("iron_horse_armor", builder().stackSize(1)));
    public static final Item GOLDEN_HORSE_ARMOR = register(new Item("golden_horse_armor", builder().stackSize(1)));
    public static final Item DIAMOND_HORSE_ARMOR = register(new Item("diamond_horse_armor", builder().stackSize(1)));
    public static final Item LEATHER_HORSE_ARMOR = register(new Item("leather_horse_armor", builder().stackSize(1)));
    public static final Item LEAD = register(new Item("lead", builder()));
    public static final Item NAME_TAG = register(new Item("name_tag", builder()));
    public static final Item COMMAND_BLOCK_MINECART = register(new Item("command_block_minecart", builder().stackSize(1)));
    public static final Item MUTTON = register(new Item("mutton", builder()));
    public static final Item COOKED_MUTTON = register(new Item("cooked_mutton", builder()));
    public static final Item WHITE_BANNER = register(new Item("white_banner", builder().stackSize(16)));
    public static final Item ORANGE_BANNER = register(new Item("orange_banner", builder().stackSize(16)));
    public static final Item MAGENTA_BANNER = register(new Item("magenta_banner", builder().stackSize(16)));
    public static final Item LIGHT_BLUE_BANNER = register(new Item("light_blue_banner", builder().stackSize(16)));
    public static final Item YELLOW_BANNER = register(new Item("yellow_banner", builder().stackSize(16)));
    public static final Item LIME_BANNER = register(new Item("lime_banner", builder().stackSize(16)));
    public static final Item PINK_BANNER = register(new Item("pink_banner", builder().stackSize(16)));
    public static final Item GRAY_BANNER = register(new Item("gray_banner", builder().stackSize(16)));
    public static final Item LIGHT_GRAY_BANNER = register(new Item("light_gray_banner", builder().stackSize(16)));
    public static final Item CYAN_BANNER = register(new Item("cyan_banner", builder().stackSize(16)));
    public static final Item PURPLE_BANNER = register(new Item("purple_banner", builder().stackSize(16)));
    public static final Item BLUE_BANNER = register(new Item("blue_banner", builder().stackSize(16)));
    public static final Item BROWN_BANNER = register(new Item("brown_banner", builder().stackSize(16)));
    public static final Item GREEN_BANNER = register(new Item("green_banner", builder().stackSize(16)));
    public static final Item RED_BANNER = register(new Item("red_banner", builder().stackSize(16)));
    public static final Item BLACK_BANNER = register(new Item("black_banner", builder().stackSize(16)));
    public static final Item END_CRYSTAL = register(new Item("end_crystal", builder()));
    public static final Item CHORUS_FRUIT = register(new Item("chorus_fruit", builder()));
    public static final Item POPPED_CHORUS_FRUIT = register(new Item("popped_chorus_fruit", builder()));
    public static final Item BEETROOT = register(new Item("beetroot", builder()));
    public static final Item BEETROOT_SEEDS = register(new Item("beetroot_seeds", builder()));
    public static final Item BEETROOT_SOUP = register(new Item("beetroot_soup", builder().stackSize(1)));
    public static final Item DRAGON_BREATH = register(new Item("dragon_breath", builder()));
    public static final PotionItem SPLASH_POTION = register(new PotionItem("splash_potion", builder().stackSize(1)));
    public static final Item SPECTRAL_ARROW = register(new Item("spectral_arrow", builder()));
    public static final TippedArrowItem TIPPED_ARROW = register(new TippedArrowItem("tipped_arrow", builder()));
    public static final PotionItem LINGERING_POTION = register(new PotionItem("lingering_potion", builder().stackSize(1)));
    public static final ShieldItem SHIELD = register(new ShieldItem("shield", builder().stackSize(1).maxDamage(336)));
    public static final Item TOTEM_OF_UNDYING = register(new Item("totem_of_undying", builder().stackSize(1)));
    public static final Item SHULKER_SHELL = register(new Item("shulker_shell", builder()));
    public static final Item IRON_NUGGET = register(new Item("iron_nugget", builder()));
    public static final Item KNOWLEDGE_BOOK = register(new Item("knowledge_book", builder().stackSize(1)));
    public static final Item DEBUG_STICK = register(new Item("debug_stick", builder().stackSize(1)));
    public static final Item MUSIC_DISC_13 = register(new Item("music_disc_13", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CAT = register(new Item("music_disc_cat", builder().stackSize(1)));
    public static final Item MUSIC_DISC_BLOCKS = register(new Item("music_disc_blocks", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CHIRP = register(new Item("music_disc_chirp", builder().stackSize(1)));
    public static final Item MUSIC_DISC_FAR = register(new Item("music_disc_far", builder().stackSize(1)));
    public static final Item MUSIC_DISC_MALL = register(new Item("music_disc_mall", builder().stackSize(1)));
    public static final Item MUSIC_DISC_MELLOHI = register(new Item("music_disc_mellohi", builder().stackSize(1)));
    public static final Item MUSIC_DISC_STAL = register(new Item("music_disc_stal", builder().stackSize(1)));
    public static final Item MUSIC_DISC_STRAD = register(new Item("music_disc_strad", builder().stackSize(1)));
    public static final Item MUSIC_DISC_WARD = register(new Item("music_disc_ward", builder().stackSize(1)));
    public static final Item MUSIC_DISC_11 = register(new Item("music_disc_11", builder().stackSize(1)));
    public static final Item MUSIC_DISC_WAIT = register(new Item("music_disc_wait", builder().stackSize(1)));
    public static final Item MUSIC_DISC_OTHERSIDE = register(new Item("music_disc_otherside", builder().stackSize(1)));
    public static final Item MUSIC_DISC_5 = register(new Item("music_disc_5", builder().stackSize(1)));
    public static final Item MUSIC_DISC_PIGSTEP = register(new Item("music_disc_pigstep", builder().stackSize(1)));
    public static final Item DISC_FRAGMENT_5 = register(new Item("disc_fragment_5", builder()));
    public static final Item TRIDENT = register(new Item("trident", builder().stackSize(1).maxDamage(250)));
    public static final Item PHANTOM_MEMBRANE = register(new Item("phantom_membrane", builder()));
    public static final Item NAUTILUS_SHELL = register(new Item("nautilus_shell", builder()));
    public static final Item HEART_OF_THE_SEA = register(new Item("heart_of_the_sea", builder()));
    public static final Item CROSSBOW = register(new Item("crossbow", builder().stackSize(1).maxDamage(465)));
    public static final Item SUSPICIOUS_STEW = register(new Item("suspicious_stew", builder().stackSize(1)));
    public static final Item LOOM = register(new Item("loom", builder()));
    public static final Item FLOWER_BANNER_PATTERN = register(new Item("flower_banner_pattern", builder().stackSize(1)));
    public static final Item CREEPER_BANNER_PATTERN = register(new Item("creeper_banner_pattern", builder().stackSize(1)));
    public static final Item SKULL_BANNER_PATTERN = register(new Item("skull_banner_pattern", builder().stackSize(1)));
    public static final Item MOJANG_BANNER_PATTERN = register(new Item("mojang_banner_pattern", builder().stackSize(1)));
    public static final Item GLOBE_BANNER_PATTERN = register(new Item("globe_banner_pattern", builder().stackSize(1)));
    public static final Item PIGLIN_BANNER_PATTERN = register(new Item("piglin_banner_pattern", builder().stackSize(1)));
    public static final GoatHornItem GOAT_HORN = register(new GoatHornItem("goat_horn", builder().stackSize(1)));
    public static final Item COMPOSTER = register(new Item("composter", builder()));
    public static final Item BARREL = register(new Item("barrel", builder()));
    public static final Item SMOKER = register(new Item("smoker", builder()));
    public static final Item BLAST_FURNACE = register(new Item("blast_furnace", builder()));
    public static final Item CARTOGRAPHY_TABLE = register(new Item("cartography_table", builder()));
    public static final Item FLETCHING_TABLE = register(new Item("fletching_table", builder()));
    public static final Item GRINDSTONE = register(new Item("grindstone", builder()));
    public static final Item SMITHING_TABLE = register(new Item("smithing_table", builder()));
    public static final Item STONECUTTER = register(new Item("stonecutter", builder()));
    public static final Item BELL = register(new Item("bell", builder()));
    public static final Item LANTERN = register(new Item("lantern", builder()));
    public static final Item SOUL_LANTERN = register(new Item("soul_lantern", builder()));
    public static final Item SWEET_BERRIES = register(new Item("sweet_berries", builder()));
    public static final Item GLOW_BERRIES = register(new Item("glow_berries", builder()));
    public static final Item CAMPFIRE = register(new Item("campfire", builder()));
    public static final Item SOUL_CAMPFIRE = register(new Item("soul_campfire", builder()));
    public static final Item SHROOMLIGHT = register(new Item("shroomlight", builder()));
    public static final Item HONEYCOMB = register(new Item("honeycomb", builder()));
    public static final Item BEE_NEST = register(new Item("bee_nest", builder()));
    public static final Item BEEHIVE = register(new Item("beehive", builder()));
    public static final Item HONEY_BOTTLE = register(new Item("honey_bottle", builder().stackSize(16)));
    public static final Item HONEYCOMB_BLOCK = register(new Item("honeycomb_block", builder()));
    public static final Item LODESTONE = register(new Item("lodestone", builder()));
    public static final Item CRYING_OBSIDIAN = register(new Item("crying_obsidian", builder()));
    public static final Item BLACKSTONE = register(new Item("blackstone", builder()));
    public static final Item BLACKSTONE_SLAB = register(new Item("blackstone_slab", builder()));
    public static final Item BLACKSTONE_STAIRS = register(new Item("blackstone_stairs", builder()));
    public static final Item GILDED_BLACKSTONE = register(new Item("gilded_blackstone", builder()));
    public static final Item POLISHED_BLACKSTONE = register(new Item("polished_blackstone", builder()));
    public static final Item POLISHED_BLACKSTONE_SLAB = register(new Item("polished_blackstone_slab", builder()));
    public static final Item POLISHED_BLACKSTONE_STAIRS = register(new Item("polished_blackstone_stairs", builder()));
    public static final Item CHISELED_POLISHED_BLACKSTONE = register(new Item("chiseled_polished_blackstone", builder()));
    public static final Item POLISHED_BLACKSTONE_BRICKS = register(new Item("polished_blackstone_bricks", builder()));
    public static final Item POLISHED_BLACKSTONE_BRICK_SLAB = register(new Item("polished_blackstone_brick_slab", builder()));
    public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS = register(new Item("polished_blackstone_brick_stairs", builder()));
    public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS = register(new Item("cracked_polished_blackstone_bricks", builder()));
    public static final Item RESPAWN_ANCHOR = register(new Item("respawn_anchor", builder()));
    public static final Item CANDLE = register(new Item("candle", builder()));
    public static final Item WHITE_CANDLE = register(new Item("white_candle", builder()));
    public static final Item ORANGE_CANDLE = register(new Item("orange_candle", builder()));
    public static final Item MAGENTA_CANDLE = register(new Item("magenta_candle", builder()));
    public static final Item LIGHT_BLUE_CANDLE = register(new Item("light_blue_candle", builder()));
    public static final Item YELLOW_CANDLE = register(new Item("yellow_candle", builder()));
    public static final Item LIME_CANDLE = register(new Item("lime_candle", builder()));
    public static final Item PINK_CANDLE = register(new Item("pink_candle", builder()));
    public static final Item GRAY_CANDLE = register(new Item("gray_candle", builder()));
    public static final Item LIGHT_GRAY_CANDLE = register(new Item("light_gray_candle", builder()));
    public static final Item CYAN_CANDLE = register(new Item("cyan_candle", builder()));
    public static final Item PURPLE_CANDLE = register(new Item("purple_candle", builder()));
    public static final Item BLUE_CANDLE = register(new Item("blue_candle", builder()));
    public static final Item BROWN_CANDLE = register(new Item("brown_candle", builder()));
    public static final Item GREEN_CANDLE = register(new Item("green_candle", builder()));
    public static final Item RED_CANDLE = register(new Item("red_candle", builder()));
    public static final Item BLACK_CANDLE = register(new Item("black_candle", builder()));
    public static final Item SMALL_AMETHYST_BUD = register(new Item("small_amethyst_bud", builder()));
    public static final Item MEDIUM_AMETHYST_BUD = register(new Item("medium_amethyst_bud", builder()));
    public static final Item LARGE_AMETHYST_BUD = register(new Item("large_amethyst_bud", builder()));
    public static final Item AMETHYST_CLUSTER = register(new Item("amethyst_cluster", builder()));
    public static final Item POINTED_DRIPSTONE = register(new Item("pointed_dripstone", builder()));
    public static final Item OCHRE_FROGLIGHT = register(new Item("ochre_froglight", builder()));
    public static final Item VERDANT_FROGLIGHT = register(new Item("verdant_froglight", builder()));
    public static final Item PEARLESCENT_FROGLIGHT = register(new Item("pearlescent_froglight", builder()));
    public static final Item FROGSPAWN = register(new Item("frogspawn", builder()));
    public static final Item ECHO_SHARD = register(new Item("echo_shard", builder()));

    private static <T extends Item> T register(T item) {
        return register(item, Registries.JAVA_ITEMS.get().size());
    }

    public static <T extends Item> T register(T item, int id) {
        item.setJavaId(id);
        Registries.JAVA_ITEMS.get().add(item);
        Registries.JAVA_ITEM_IDENTIFIERS.register(item.javaIdentifier(), item);
        return item;
    }

    private Items() {
    }
}
